<?xml version="1.0" encoding="utf-8"?>
<references xmlns="https://github.com/dfan97" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="https://github.com/dfan97 ../Xsd/common.xsd">
	<reference type="{trigger}"><!--default="true"-->
		<choice min="1" max="*">
			<complex sequence="allowed" entity="AND" type="{trigger}">
				<annotation>Returns true if all conditions inside the block evaluate to true</annotation>
			</complex>
			<complex entity="OR" type="{trigger}">
				<annotation>Returns true if at least one condition inside the block evaluates to true</annotation>
			</complex>
			<complex entity="NOT" type="{trigger}" max="1">
				<!-- сделать через custom, чтобы здесь был complex - simple -->
				<annotation>Returns true if the condition inside the block evaluates to false, and false if it evaluates to true</annotation>
			</complex>
			<complex entity="NAND" type="{trigger}">
				<annotation>Returns true unless all of the conditions inside the block evaluate to true</annotation>
			</complex>
			<complex entity="NOR" type="{trigger}">
				<annotation>Returns true if none of the condition inside the block evaluate to true</annotation>
			</complex>
			
			<complex entity="calc_true_if">
				<annotation>Returns true if the specified number of sub-triggers return true</annotation>
				
				<simple entity="amount" relation="bool" type="{int}" min-value="1">
					<annotation>A condition specifying the number of triggers that should be evaluated as true</annotation>
				</simple>
				<complex sequence="only" type="{trigger}" />
			</complex>
			
			<!-- сделать custom, который будет содержать эти объекты 
				Returns false if the conditions inside the block evaluates to false. 
			-->
			<complex entity="if">
				<annotation>Evaluates, if conditions in the limit block evaluate as true</annotation>
				
				<complex entity="limit" type="{trigger}" min="1">
					<annotation>A condition that determines would be 'if' block evaluated or not</annotation>
				</complex>
				<complex sequence="only" type="{trigger}" />
			</complex>
			<complex entity="else_if">
				<annotation>Evaluates, if preceding blocks evaluate as false and if conditions in the current limit block evaluate as true</annotation>
				
				<complex entity="limit" type="{trigger}" min="1">
					<annotation>A condition that determines would be 'else_if' block evaluated or not</annotation>
				</complex>
				<complex sequence="only" type="{trigger}" />
			</complex>
			<complex entity="else" type="{trigger}">
				<annotation>Evaluates last</annotation>
			</complex>
			
			
			<complex entity="switch">
				<annotation></annotation> <!-- Switch case for a trigger -->
				
				<simple entity="trigger" type="{trigger}" min="1">
					<annotation>A trigger to evaluate</annotation>
				</simple>
<!--				<complex entity="{?}" type="{trigger}" max="*" />-->
				<!--
					добавить возможность определять тип из контекста??? - будет полезно не только тут, но и в некоторых других триггерах
					global.trigger..switch.trigger.value:type
					.. - потому что нужно пройти choice
					.value - неявное свойство, содержащее значение определенного в .type типа
					:type - обращение к типу внутри значения элемента, как в примере с pop_has_ethic к типу ethic, что позволяет указывать этики в switch
					
					switch = {
						trigger = pop_has_ethic
						ethic_xenophile = { <trigger> }
						ethic_xenophobe = { <trigger> }
						default = { <trigger> }
					}
				-->
				<complex entity="default" type="{trigger}" />
			</complex>
			<complex entity="inverted_switch">
				<annotation></annotation> <!-- Switch case for a trigger treated as NOT -->
				
				<simple entity="trigger" type="{trigger}" min="1">
					<annotation>A trigger to evaluate</annotation>
				</simple>
<!--				<complex entity="{?}" type="{trigger}" max="*" />-->
				<complex entity="default" type="{trigger}" />
			</complex>


			<simple entity="ai_colonize_plans" relation="bool" type="{int}" scope="country">
				<annotation>Checks how many plans the AI have for colonization (lighter than controlled_colonizable for AI)</annotation>
			</simple>
			<simple entity="allowed_crisis_type" type="{?}">
				<annotation>Checks which crisis is allowed to spawn in the current game</annotation>
				<!-- prethoryn/unbidden/contingency/all -->
			</simple>
			<simple entity="always" type="{bool}">
				<annotation>Sets trigger to be either always true or false</annotation>
			</simple>

			<complex entity="any_active_first_contact" type="{trigger}" scope="country">
				<annotation>Iterates through each active (non-completed) first contact that this country is engaging in - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_ambient_object" type="{trigger}">
				<annotation>Iterates through every ambient object in the game - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_associate" type="{trigger}" scope="federation">
				<annotation>Iterates through each associate member of the federation - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_attacker" type="{trigger}" scope="war">
				<annotation>Iterates through all attackers in the current war - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_bordering_country" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through all bordering countries of a system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_combatant_fleet" type="{trigger}" scope="fleet">
				<annotation>Iterates through each fleet this fleet is in combat with - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_controlled_planet" type="{trigger}" scope="country">
				<annotation>Iterates through each inhabited planet controlled by the current empire - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_council_member" type="{trigger}">
				<annotation>Iterates through each member of the galactic council - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_country" type="{trigger}">
				<annotation>Iterates through all countries - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_defender" type="{trigger}" scope="war">
				<annotation>Iterates through all defenders in the current war - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_deposit" type="{trigger}" scope="planet">
				<annotation>Iterates through each deposit on the planet - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_enslaved_species" type="{trigger}" scope="country planet">
				<annotation>Checks if any of the species with enslaved pops on the planet/in the country meet the specified criteria - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_envoy" type="{trigger}" scope="country">
				<annotation>Iterates through each envoy available to the country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_espionage_asset" type="{trigger}" scope="espionage_operation no_scope spy_network">
				<annotation>Iterates through each espionage asset - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_espionage_operation" type="{trigger}" scope="country no_scope spy_network">
				<annotation>Iterates through each espionage operation - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_federation" type="{trigger}">
				<annotation>Iterates through each federation - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_federation_ally" type="{trigger}" scope="country">
				<annotation>Iterates through all countries in a federation with the scoped country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_first_contact" type="{trigger}" scope="country">
				<annotation>Iterates through each first contact (both active and complete) that this country is engaging in - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_fleet_in_orbit" type="{trigger}" scope="megastructure planet starbase">
				<annotation>Iterates through each fleet orbiting the current planet/starbase/megastructure - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_fleet_in_system" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through each fleet in the current system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_galaxy_fleet" type="{trigger}">
				<annotation>Iterates through each fleet in the entire game - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_galaxy_planet" type="{trigger}">
				<annotation>Iterates through each planet ANYWHERE in the game; warning: resource intensive! - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_galaxy_sector" type="{trigger}">
				<annotation>Iterates through all sectors in the game - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_galaxy_species" type="{trigger}">
				<annotation>Checks if any species in the galaxy meet the specified criteria - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_galcom_member" type="{trigger}">
				<annotation>Iterates through each member of the galactic community - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_ground_combat_attacker" type="{trigger}" scope="planet">
				<annotation>Iterates through each army currently attacking the planet in ground combat - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_ground_combat_defender" type="{trigger}" scope="planet">
				<annotation>Iterates through each army currently defending the planet in ground combat - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_megastructure" type="{trigger}">
				<annotation>Iterates through each megastructure - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_member" type="{trigger}" scope="federation">
				<annotation>Iterates through each member of the federation - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_moon" type="{trigger}" scope="planet">
				<annotation>Iterates through each moon of the planet - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_neighbor_country" type="{trigger}" scope="country">
				<annotation>Iterates through all neighbor countries - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_neighbor_system" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through all a system's neighboring systems by hyperlane - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_neighbor_system_euclidean" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through all a system's neigboring systems (by closeness, not by hyperlanes) - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_orbital_station" type="{trigger}" scope="country galactic_object">
				<annotation>Iterates through each orbital station owned by the current country or in the current system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_army" type="{trigger}" scope="country">
				<annotation>Iterates through each army that is owned by the country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_fleet" type="{trigger}" scope="country">
				<annotation>Iterates through each fleet owned by the country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_leader" type="{trigger}" scope="country">
				<annotation>Iterates through each leader that is owned by the country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_megastructure" type="{trigger}" scope="country">
				<annotation>Iterates through each owned megastructure - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_planet" type="{trigger}" scope="country sector">
				<annotation>Iterates through each inhabited planet owned by the current empire - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_pop" type="{trigger}" scope="country planet pop_faction sector">
				<annotation>Iterates through all owned pops - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_pop_species" type="{trigger}" scope="country">
				<annotation>Iterates through each species of a country's owned pops - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_sector" type="{trigger}" scope="country">
				<annotation>Iterates through every owned sector - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_ship" type="{trigger}" scope="country fleet">
				<annotation>Iterates through each ship in the fleet or owned by the country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_species" type="{trigger}" scope="country planet">
				<annotation>Checks if any of the species &lt;on the planet/in the country&gt; meet the specified criteria - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_owned_starbase" type="{trigger}" scope="country">
				<annotation>Iterates through every owned starbase - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_planet_army" type="{trigger}" scope="planet">
				<annotation>Iterates through each army on the planet (not in ground combat), regardless of owner. - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_planet_within_border" type="{trigger}" scope="country">
				<annotation>Iterates through each planet within the current empire's borders - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_playable_country" type="{trigger}">
				<annotation>Iterates through all playable countries - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_pool_leader" type="{trigger}" scope="country">
				<annotation>Iterates through each leader that is recruitable for the country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_pop" type="{trigger}" scope="planet pop_faction species">
				<annotation>Checks if any of the planet/species/pop faction pops meet the specified criteria. Warning: deprecated, use any_owned_pop/any_species_pop</annotation>
			</complex>
			<complex entity="any_pop_faction" type="{trigger}" scope="country">
				<annotation>Iterates through all the country's pop factions - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_relation" type="{trigger}" scope="country">
				<annotation>Iterates through all relations - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_rim_system" type="{trigger}">
				<annotation>Iterates through all rim systems - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_rival_country" type="{trigger}" scope="country">
				<annotation>Iterates through all countries rivalled by the scoped country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_ship_in_system" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through each ship in the current system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_situation" type="{trigger}" scope="country">
				<annotation>Iterates through each situation a country is experiencing - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_species_pop" type="{trigger}" scope="species">
				<annotation>Iterates through each pop that belongs to this species; warning: resource-intensive! - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_spynetwork" type="{trigger}" scope="country no_scope">
				<annotation>Iterates through each spynetwork - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_subject" type="{trigger}" scope="country">
				<annotation>Iterates through all subjects of the scoped country - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_system" type="{trigger}">
				<annotation>Iterates through all systems - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_system_ambient_object" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through every ambient object in the solar system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_system_megastructure" type="{trigger}">
				<annotation>Iterates through each megastructure in system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_system_planet" type="{trigger}" scope="galactic_object">
				<annotation>Iterates through each planet in the current system - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_system_within_border" type="{trigger}" scope="country sector">
				<annotation>Iterates through all systems within the country's or sector's borders - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<complex entity="any_war" type="{trigger}" scope="country">
				<annotation>Iterates through all wars the country is engaged in - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>
			<complex entity="any_war_participant" type="{trigger}" scope="war">
				<annotation>Iterates through all war participants - checks whether the enclosed triggers return true for any of them</annotation>
			</complex>

			<simple entity="army_type" type="{?}" scope="army">
				<annotation>Checks the army's type</annotation>
				<!-- assault_army -->
			</simple>
			<simple entity="attacker_war_exhaustion" relation="bool" type="{float}" scope="war">
				<annotation>Checks the war exhaustion of the war's attackers</annotation>
			</simple>




			<simple entity="balance" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's energy credit balance</annotation>
			</simple>
			<complex entity="branch_office_value" scope="planet">
				<annotation>Checks the planet's branch office value</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>




			<simple entity="can_access_system" type="{system}" scope="fleet">
				<annotation>Checks if the scoped fleet is able to enter the system. Note: Avoid overusing this, it is a performance-intensive trigger!</annotation>
			</simple>
			<complex entity="can_be_subject" scope="country">
				<annotation>Checks if the country can be a subject of a specific type under target country</annotation>

				<!-- tributary -->
				<simple entity="subject_type" type="{?}" min="1" />
				<simple entity="overlord" type="{country}" min="1" />
			</complex>
			<simple entity="can_buy_on_market" type="{resource}" scope="country">
				<annotation>Checks if the current country can buy the specified resource on the market or galactic market</annotation>
			</simple>
			<simple entity="can_change_policy" type="{policy}" scope="country">
				<annotation>Checks if the country can change a specific policy</annotation>
			</simple>
			<complex entity="can_colonize" scope="planet">
				<annotation>Checks if the planet can be colonized by target country</annotation>

				<simple entity="who" type="{scope}" min="1" />
				<simple entity="status" type="{bool}" />
				<!-- fixed 'yes' ? -->
			</complex>
			<simple entity="can_control_access_for" type="{country}" scope="country">
				<annotation>Checks if the country is allowed to control target country's border access to the country</annotation>
			</simple>
			<complex entity="can_copy_random_tech_from" scope="country">
				<annotation>Checks whether the target country has a technology the current country can steal via 'copy_random_tech_from' effect</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="category" type="{?}" />
				<simple entity="area" type="{?}" />
				<!-- category = computing (optional) area = physics (optional) -->
			</complex>
			<complex entity="can_declare_war" scope="country">
				<annotation>Checks if the country can declare war against target country</annotation>

				<simple entity="target" type="{country}" min="1" />
				<simple entity="attacker_war_goal" type="{?}" min="1" />
				<!-- attacker_war_goal = <war goal> -->
			</complex>
			<simple entity="can_have_first_contact_site_with" type="{country}" scope="country">
				<annotation>Checks if the scoped country is allowed to have a First Contact site with the target country</annotation>
			</simple>
			<simple entity="can_join_factions" type="{pop-faction}" scope="pop">
				<annotation>Checks if scoped pop can join a faction</annotation>
			</simple>
			<simple entity="can_live_on_planet" type="{planet}" scope="pop species">
				<annotation>Checks if the pop or species is allowed to live on a specified planet</annotation>
			</simple>
			<simple entity="can_research_technology" type="{technology}" scope="country">
				<annotation>Checks whether the current country is allowed to have the specified technology</annotation>
			</simple>
			<complex entity="can_set_policy" scope="country">
				<annotation>Checks if the country is allowed to set it's policy to a specific one using 'set_policy' effect</annotation>

				<simple entity="policy" type="{policy}" min="1" />
				<simple entity="option" type="{policy}.option" min="1" />
			</complex>
			<simple entity="can_set_situation_approach" type="{?}" scope="situation">
				<annotation>Checks if the specified approach is allowed to be picked (according to potential and allow triggers) on the scoped situation</annotation>
				<!-- approach (name field of the approach) -->
			</simple>
			<simple entity="can_work_job" type="{bool}" scope="pop">
				<annotation>Checks if the pop can work a job</annotation>
			</simple>
			<simple entity="can_work_specific_job" type="{pop-job}" scope="pop">
				<annotation>Checks if the pop can work a specific job if a vacancy becomes available</annotation>
			</simple>

			<simple entity="caravaneers_enabled" type="{bool}">
				<annotation>Checks if 'Caravaneers' are enabled in game setup</annotation>
			</simple>
			<complex entity="check_galaxy_setup_value">
				<annotation>Checks the value for a specific option from the galaxy setup</annotation>

				<simple entity="setting" type="{string}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
				<!--
        	possible values: num_empires, num_advanced_empires, num_fallen_empires, num_marauder_empires, mid_game_year, end_game_year, victory_year,
        	num_guaranteed_colonies, num_gateways, num_wormhole_pairs, num_hyperlanes, habitable_worlds_scale, primitive_worlds_scale, crisis_strength_scale, tech_costs_scale
        -->
			</complex>
			<complex entity="check_modifier_value" scope="army country design espionage_operation fleet galactic_object leader megastructure planet pop pop_faction ship species spy_network">
				<annotation>Checks the value of a specified modifier in the current scope against a value</annotation>

				<simple entity="modifier" type="{modifier}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>
			<complex entity="check_pop_faction_parameter" scope="pop_faction">
				<annotation>Checks if one of the faction's parameters is the same as target scope</annotation>

				<simple entity="which" type="{?}" min="1" />
				<simple entity="value" type="{scope}" min="1" />
			</complex>
			<complex entity="check_variable" scope="ambient_object archaeological_site army country deposit espionage_asset espionage_operation federation first_contact fleet galactic_object leader megastructure planet pop pop_faction sector ship situation species spy_network starbase war">
				<annotation>Checks a variable for the country/system/planet/fleet/leader</annotation>

				<simple entity="which" type="{?}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
				<!--check_variable = { which = <variable> value >=< <float>/<variable>/<scope.variable>/trigger:<trigger> }-->
			</complex>
			<complex entity="check_variable_arithmetic" scope="ambient_object archaeological_site army country deposit espionage_asset espionage_operation federation first_contact fleet galactic_object leader megastructure planet pop pop_faction sector ship situation species spy_network starbase war">
				<annotation>Checks a variable for the scope if a certain amount of arithmetic is done to it (note: the variable's value is not changed by this trigger)</annotation>

				<simple entity="which" type="{?}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />

				<simple entity="add" type="{float}" />
				<simple entity="subtract" type="{float}" />
				<simple entity="multiply" type="{float}" />
				<simple entity="divide" type="{float}" />
				<simple entity="modulo" type="{float}" />
				<!--check_variable_arithmetic = {
      		which = <variable>
      		add/subtract/multiply/divide/modulo = <float>/<variable>/<scope.variable>/trigger:<trigger> (note: this line can be repeated as many times as desired)
      		value <=> <float>/<variable>/<scope.variable>/trigger:<trigger> (the value to compare against)
      	}-->
			</complex>

			<simple entity="civics_count" relation="bool" type="{int}" scope="country">
				<annotation>Checks the countrys' number of civics</annotation>
			</simple>

			<complex entity="closest_system">
				<annotation>
        	Finds the closest system within the given hyperlane steps and limit.
        	If this system does not exist, it returns false.
        	If it does exist, it is checked against the triggers outside of the limit
        </annotation>

				<complex entity="limit" type="{trigger}" />
				<simple entity="min_steps" type="{int}" min-value="0" />
				<simple entity="max_steps" type="{int}" min-value="0" />
				<simple entity="use_bypasses" type="{bool}" default="no" />

				<complex sequence="only" type="{trigger}" />
			</complex>

			<simple entity="colony_age" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's (colony's) age in months</annotation>
			</simple>
			<simple entity="colony_type" type="{?}" scope="planet">
				<annotation>Checks if the colony is of a certain type</annotation>
				<!-- colony_type = col_rural/<planet scope> ? -->
			</simple>

			<simple entity="command_limit" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's command limit</annotation>
			</simple>

			<complex entity="compare_distance" scope="ambient_object archaeological_site deposit first_contact fleet galactic_object leader megastructure planet pop ship starbase">
				<annotation>Checks whether the current scope is closer to a specified object than it is to a second specified object within the same solar system</annotation>

				<simple entity="closer_object" type="{scope}" min="1" />
				<simple entity="further_object" type="{scope}" min="1" />
			</complex>

			<simple entity="conditional_tooltip" type="{?}">
				<annotation>The enclosed trigger will be completely ignored if the condition in "trigger" isn't true. Useful to hide part of tooltips that are not relevant</annotation>
			</simple>

			<simple entity="controlled_colonizable" relation="bool" type="{int}" scope="country">
				<annotation>Returns the number of planets within the current country's borders that are habitable but have not been colonized</annotation>
			</simple>
			<simple entity="controlled_systems" relation="bool" type="{int}" scope="country sector">
				<annotation>Checks the country's or sector's number of owned systems</annotation>
			</simple>

			<complex entity="count_active_first_contact" scope="country">
				<annotation>Iterates through each active (non-completed) first contact that this country is engaging in - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_ambient_object">
				<annotation>Iterates through every ambient object in the game - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_associate" scope="federation">
				<annotation>Iterates through each associate member of the federation - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_attacker" scope="war">
				<annotation>Iterates through all attackers in the current war - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_bordering_country" scope="galactic_object">
				<annotation>Iterates through all bordering countries of a system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_combatant_fleet" scope="fleet">
				<annotation>Iterates through each fleet this fleet is in combat with - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_controlled_planet" scope="country">
				<annotation>Iterates through each inhabited planet controlled by the current empire - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_council_member">
				<annotation>Iterates through each member of the galactic council - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_country">
				<annotation>Iterates through all countries - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_defender" scope="war">
				<annotation>Iterates through all defenders in the current war - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_deposit" scope="planet">
				<annotation>Iterates through each deposit on the planet - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_deposits" scope="planet">
				<annotation>Checks the number of deposits on the planet that meet the specified criteria</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<simple entity="type" type="{deposit}" min="1" />
			</complex>
			<complex entity="count_enslaved_species" scope="country planet">
				<annotation>Checks if any of the species with enslaved pops &lt;on the planet/in the country&gt; meet the specified criteria - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_envoy" scope="country">
				<annotation>Iterates through each envoy available to the country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_espionage_asset" scope="espionage_operation no_scope spy_network">
				<annotation>Iterates through each espionage asset - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_espionage_operation" scope="country no_scope spy_network">
				<annotation>Iterates through each espionage operation - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_exact_species" scope="country planet">
				<annotation>Counts the number of species in the scope that fulfill the specified criteria, counting sub-species as unique</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_federation">
				<annotation>Iterates through each federation - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_federation_ally" scope="country">
				<annotation>Iterates through all countries in a federation with the scoped country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_first_contact" scope="country">
				<annotation>Iterates through each first contact (both active and complete) that this country is engaging in - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_fleet_in_orbit" scope="megastructure planet starbase">
				<annotation>Iterates through each fleet orbiting the current planet/starbase/megastructure - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_fleet_in_system" scope="galactic_object">
				<annotation>Iterates through each fleet in the current system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_galaxy_fleet">
				<annotation>Iterates through each fleet in the entire game - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_galaxy_planet">
				<annotation>Iterates through each planet ANYWHERE in the game; warning: resource intensive! - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_galaxy_sector">
				<annotation>Iterates through all sectors in the game - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_galaxy_species">
				<annotation>Checks if any species in the galaxy meet the specified criteria - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_galcom_member">
				<annotation>Iterates through each member of the galactic community - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_ground_combat_attacker" scope="planet">
				<annotation>Iterates through each army currently attacking the planet in ground combat - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_ground_combat_defender" scope="planet">
				<annotation>Iterates through each army currently defending the planet in ground combat - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_megastructure">
				<annotation>Iterates through each megastructure - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_member" scope="federation">
				<annotation>Iterates through each member of the federation - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_moon" scope="planet">
				<annotation>Iterates through each moon of the planet - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_neighbor_country" scope="country">
				<annotation>Iterates through all neighbor countries - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_neighbor_system" scope="galactic_object">
				<annotation>Iterates through all a system's neighboring systems by hyperlane - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_neighbor_system_euclidean" scope="galactic_object">
				<annotation>Iterates through all a system's neigboring systems (by closeness, not by hyperlanes) - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_orbital_station" scope="country galactic_object">
				<annotation>Iterates through each orbital station owned by the current country or in the current system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_army" scope="country">
				<annotation>Iterates through each army that is owned by the country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_fleet" scope="country">
				<annotation>Iterates through each fleet owned by the country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_leader" scope="country">
				<annotation>Iterates through each leader that is owned by the country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_megastructure" scope="country">
				<annotation>Iterates through each owned megastructure - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_planet" scope="country sector">
				<annotation>Iterates through each inhabited planet owned by the current empire - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_pop" scope="country planet pop_faction sector">
				<annotation>Iterates through all owned pops - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_pop_species" scope="country">
				<annotation>Iterates through each species of a country's owned pops - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_pops" scope="country planet pop_faction">
				<annotation>Count the number of owned pops in the country that fulfill the specified criteria. Warning: deprecated, use count_owned_pop</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_sector" scope="country">
				<annotation>Iterates through every owned sector - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_ship" scope="country fleet">
				<annotation>Iterates through each ship in the fleet or owned by the country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_species" scope="country planet">
				<annotation>Checks if any of the species &lt;on the planet/in the country&gt; meet the specified criteria - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_owned_starbase" scope="country">
				<annotation>Iterates through every owned starbase - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_planet_army" scope="planet">
				<annotation>Iterates through each army on the planet (not in ground combat), regardless of owner. - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_planet_within_border" scope="country">
				<annotation>Iterates through each planet within the current empire's borders - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_playable_country">
				<annotation>Iterates through all playable countries - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_pool_leader" scope="country">
				<annotation>Iterates through each leader that is recruitable for the country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_pop_faction" scope="country">
				<annotation>Iterates through all the country's pop factions - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_pops" scope="planet pop_faction species">
				<annotation>Checks the number of pops in the scope that fulfill the specified criteria. Warning: deprecated, use count_owned_pop/count_species_pop</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_potential_war_participants">
				<annotation>Checks the amount of potential war participants in a specific war that meet the specified criteria</annotation>

				<!-- ??? -->
				<simple entity="count" relation="bool" type="{int}" />
				<simple entity="attacker" type="{country}" />
				<simple entity="defender" type="{country}" />
				<simple entity="side" type="{country}" />
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_relation" scope="country">
				<annotation>Iterates through all relations - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_rim_system">
				<annotation>Iterates through all rim systems - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_rival_country" scope="country">
				<annotation>Iterates through all countries rivalled by the scoped country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_ship_in_system" scope="galactic_object">
				<annotation>Iterates through each ship in the current system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_situation" scope="country">
				<annotation>Iterates through each situation a country is experiencing - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_species" scope="country planet">
				<annotation>Counts the number of species in the scope that fulfill the specified criteria, not counting sub-species as unique</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_species_pop" scope="species">
				<annotation>Iterates through each pop that belongs to this species; warning: resource-intensive! - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_spynetwork" scope="country no_scope">
				<annotation>Iterates through each spynetwork - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_starbase_modules" scope="starbase">
				<annotation>Checks the number of starbase modules that are of the specified type or not</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<simple entity="type" relation="bool" type="{starbase-module}" />
			</complex>
			<complex entity="count_starbase_sizes" scope="country">
				<annotation>Checks if the scoped country has a specified quantity of a starbase size</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_subject" scope="country">
				<annotation>Iterates through all subjects of the scoped country - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_system">
				<annotation>Iterates through all systems - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_system_ambient_object" scope="galactic_object">
				<annotation>Iterates through every ambient object in the solar system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_system_megastructure">
				<annotation>Iterates through each megastructure in system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_system_planet" scope="galactic_object">
				<annotation>Iterates through each planet in the current system - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_system_within_border" scope="country sector">
				<annotation>Iterates through all systems within the country's or sector's borders - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_tech_options" scope="country">
				<annotation>Checks the country's number available tech research options in a specific field</annotation>

				<simple entity="count" relation="bool" type="{int}" />
				<simple entity="area" type="{?}" />
				<!-- area = physics -->
			</complex>
			<complex entity="count_war" scope="country">
				<annotation>Iterates through all wars the country is engaged in - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_war_participant" scope="war">
				<annotation>Iterates through all war participants - checks whether the enclosed triggers return true for X/all of them</annotation>

				<simple entity="count" type="{int}">
					<extension>
						<enum value="all" />
					</extension>
				</simple>
				<complex entity="limit" type="{trigger}" />
			</complex>
			<complex entity="count_war_participants" scope="war">
				<annotation>Checks the number of participants in the war on a specific side that meet the specified criteria</annotation>

				<!-- ? -->
				<simple entity="count" relation="bool" type="{int}" />
				<simple entity="side" type="{country}" />
				<complex entity="limit" type="{trigger}" />
			</complex>

			<simple entity="current_severity_level" type="{?}" scope="situation">
				<annotation>Checks if the specified severity level is currently active in the scoped situation</annotation>
				<!-- severity (name defined in situations severity_levels) -->
			</simple>
			<simple entity="current_situation_approach" type="{?}" scope="situation">
				<annotation>Checks if the specified approach has been picked on the scoped situation</annotation>
				<!-- approach (name field of the approach) -->
			</simple>

			<complex entity="custom_tooltip">
				<annotation>Replaces the tooltips for the enclosed triggers with a custom text</annotation>

				<simple entity="text" type="{string}">
					<annotation>Text used as fallback for both fails and successes</annotation>
				</simple>
				<simple entity="fail_text" type="{string}">
					<annotation>Text used as fallback for fails</annotation>
					<extension>
						<enum value="default" />
						<enum value="none" />
					</extension>
				</simple>
				<simple entity="success_text" type="{string}">
					<annotation>Text used as fallback for successes</annotation>
					<extension>
						<enum value="default" />
						<enum value="none" />
					</extension>
				</simple>

				<complex sequence="only" type="{trigger}" />
			</complex>
			<complex entity="custom_tooltip_fail">
				<annotation>Shows custom text only when the associated trigger fails</annotation>

				<simple entity="text" type="{string}" min="1" />
				<complex sequence="only" type="{trigger}" />
			</complex>
			<complex entity="custom_tooltip_success">
				<annotation>Shows custom text only when the associated trigger passes</annotation>

				<simple entity="text" type="{string}" min="1" />
				<complex sequence="only" type="{trigger}" />
			</complex>




			<simple entity="days_passed" relation="bool" type="{int}">
				<annotation>Checks the number of in-game days passed since the 2200.1.1 start</annotation>
			</simple>

			<simple entity="debug_break" type="{bool}">
				<annotation>Trigger an assertion to stop the debugger when encountering this trigger; returns the value it is assigned</annotation>
			</simple>

			<simple entity="def_war_exhaustion_sum" relation="bool" type="{float}" scope="country">
				<annotation>Checks the country's total war exhaustion for all defemsove wars</annotation>
			</simple>
			<simple entity="defender_war_exhaustion" relation="bool" type="{float}" scope="war">
				<annotation>Checks the war exhaustion of the war's defenders</annotation>
			</simple>
			<simple entity="diplomacy_weight" relation="bool" type="{int}" scope="country">
				<annotation>Checks the countrys diplomacy weight</annotation>
			</simple>

			<complex entity="distance" scope="ambient_object archaeological_site deposit first_contact fleet galactic_object leader megastructure planet pop ship starbase">
				<annotation>Checks the ship/fleet/leader/pop/planet/system's galaxy map distance to target in absolute units</annotation>

				<simple entity="source" type="{scope}" />
				<simple entity="min_distance" relation="bool" type="{int}" />
				<simple entity="max_distance" relation="bool" type="{int}" />
				<simple entity="type" type="{string}">
					<restriction>
						<enum value="hyperlane" />
						<enum value="euclidean" />
					</restriction>
				</simple>
				<simple entity="bypass_empire" type="{country}" />
				<simple entity="min_jumps" type="{int}" />
				<simple entity="max_jumps" type="{int}" />
				<simple entity="same_solar_system" type="{bool}" default="no">
					<annotation>Toggles whether the trigger checks galaxy map or solar system distances</annotation>
				</simple>
			</complex>
			<simple entity="distance_to_core_percent" relation="bool" type="{int}">
				<annotation>Checks the ship/fleet/planet/leader/pop/system's distance to the galactic core in percent, where center = 0 and galactic rim = 100</annotation>
			</simple>
			<complex entity="distance_to_empire" scope="fleet galactic_object planet ship">
				<annotation>Checks the ship/fleet/planet/system's galaxy map distance to target empire</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="distance" type="{int}" />
			</complex>




			<simple entity="empire_size" relation="bool" type="{int}" scope="country">
				<annotation>Checks the empire's size. Identical to ~empire_spraw~ trigger</annotation>
			</simple>
			<simple entity="empire_sprawl" relation="bool" type="{int}" scope="country">
				<annotation>Checks the empire's sprawl. Identical to ~empire_size~ trigger</annotation>
			</simple>
			<simple entity="empire_sprawl_cap_fraction" relation="bool" type="{float}" scope="country">
				<annotation>Checks the empire's sprawl compared to it's admin level</annotation>
			</simple>
			<simple entity="empire_sprawl_over_cap" relation="bool" type="{int}" scope="country">
				<annotation>Checks how much the empire sprawl is over it's admin capacity</annotation>
			</simple>

			<simple entity="end_game_years_passed" relation="bool" type="{int}">
				<annotation>Checks the number of in-game years passed since the end-game start date</annotation>
			</simple>
			<complex entity="envoy_opinion_change" scope="country">
				<annotation>Checks the country's opinion of the target country has been changed by envoys</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="value" relation="bool" type="{int}" />
			</complex>
			<simple entity="ethos" relation="bool" type="{float}" scope="planet">
				<annotation>Checks the average ethics divergence on the planet, i.e. num of pops not of the country's ethics / total num of pops</annotation>
			</simple>
			<simple entity="exists" type="{scope}">
				<annotation>Checks if a target scope exists</annotation>
			</simple>
			<simple entity="expenses" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's monthly energy credit expenses</annotation>
			</simple>
			<simple entity="exploitable_planets" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country has planets that are unexploited (i.e. orbital stations can be built on them)</annotation>
			</simple>




			<simple entity="faction_approval" relation="bool" type="{float}" scope="pop_faction">
				<annotation>Checks the scoped faction's approval percentage</annotation>
			</simple>
			<complex entity="fail_text">
				<annotation>Shows custom text when the associated trigger fails</annotation>

				<simple entity="text" type="{string}" min="1" />
				<complex sequence="only" type="{trigger}" />
			</complex>

			<simple entity="federation_cohesion" relation="bool" type="{int}" scope="federation">
				<annotation>Checks cohesion of the federation</annotation>
			</simple>
			<simple entity="federation_cohesion_growth" relation="bool" type="{int}" scope="federation">
				<annotation>Checks cohesion growth of the federation</annotation>
			</simple>
			<simple entity="federation_experience" relation="bool" type="{int}" scope="federation">
				<annotation>Checks experience of the federation</annotation>
			</simple>
			<simple entity="federation_level" relation="bool" type="{int}" scope="federation">
				<annotation>Checks federation level in comparison to given value in scoped federation</annotation>
			</simple>

			<simple entity="fleet_power" relation="bool" type="{int}" scope="country federation fleet">
				<annotation>Checks the scope's total fleet power</annotation>
			</simple>
			<simple entity="fleet_size" relation="bool" type="{int}" scope="fleet">
				<annotation>Checks the fleet's fleet size</annotation>
			</simple>

			<!-- prefix for species-rights??? -->
			<simple entity="former_citizenship_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former citizenship type with the given one</annotation>
			</simple>
			<simple entity="former_living_standard_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former living standard type with the given one</annotation>
			</simple>
			<simple entity="former_migration_control_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former migration control type with the given one</annotation>
			</simple>
			<simple entity="former_military_service_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former military service type with the given one</annotation>
			</simple>
			<simple entity="former_population_control_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former population control type with the given one</annotation>
			</simple>
			<simple entity="former_purge_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former purge type with the given one</annotation>
			</simple>
			<simple entity="former_slavery_type" type="{species-rights}" scope="pop">
				<annotation>Compares the former slavery type with the given one</annotation>
			</simple>

			<simple entity="free_amenities" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's available amenities</annotation>
			</simple>
			<simple entity="free_branch_office_building_slots" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's number of branch office slots available for new constructions</annotation>
			</simple>
			<simple entity="free_building_slots" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's number of slots available for new constructions</annotation>
			</simple>
			<simple entity="free_district_slots" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's number of slots available for new constructions</annotation>
			</simple>
			<simple entity="free_housing" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's available housing</annotation>
			</simple>
			<simple entity="free_jobs" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the number of jobs compared to pops on the planet</annotation>
			</simple>




			<simple entity="galactic_community_rank" relation="bool" type="{int}" scope="country">
				<annotation>
        	Compares empire rank (sorted by diplomatic weight) in the Galactic Community.
        	Note: If the scoped country isn't part of the community this returns -1
        </annotation>
			</simple>
			<simple entity="galactic_defense_force_exists" type="{bool}">
				<annotation>Checks if the 'Galactic Defense Force' or 'Imperial Armada' exists</annotation>
			</simple>
			<simple entity="galaxy_percentage" relation="bool" type="{float}" min-value="0" max-value="1" scope="country">
				<annotation>Checks if the country has a specific percentage (0.00-1.00) of the galaxy within it's borders</annotation>
			</simple>
			<simple entity="galaxy_size" type="{galaxy-size}">
				<annotation>Checks whether the galaxy size if of a certain type</annotation>
			</simple>
			<simple entity="gender" type="{string}" scope="leader">
				<annotation>Checks the leader's gender</annotation>
				<restriction>
					<!-- в тип -->
					<enum value="any" />
					<enum value="male" />
					<enum value="female" />
					<enum value="indeterminable" />
				</restriction>
			</simple>
			<simple entity="graphical_culture" type="{?}" scope="country ship">
				<annotation>Checks if the country has specific graphical culture</annotation>
			</simple>




			<complex entity="habitability" scope="planet">
				<annotation>Checks the planet's habitability (0 to 1) for target species/pop</annotation>

				<simple entity="who" type="{?}" min="1" />
				<!-- species/pop in one type??? -->
				<simple entity="value" type="{float}" min-value="0" max-value="1" min="1" />
			</complex>
			<simple entity="happiness" relation="bool" type="{float}" scope="pop">
				<annotation>Checks the pop's happiness percentage</annotation>
			</simple>
			<simple entity="happiness_planet" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the average happiness on the planet</annotation>
			</simple>

			<simple entity="has_access_fleet" type="{country}" scope="galactic_object">
				<annotation>Checks if the target country is allowed to enter the system</annotation>
			</simple>
			<simple entity="has_active_building" type="{building}" scope="planet">
				<annotation>Checks if the planet has a specific building, and that that building is not disabled or ruined</annotation>
				<extension>
					<enum value="yes" />
				</extension>
			</simple>
			<complex entity="has_active_event" type="{event}" scope="country">
				<annotation>Checks if country has active events</annotation>
			</complex>
			<simple entity="has_active_first_contact_with" type="{country}" scope="country">
				<annotation>Checks if the scoped country has an active 'First Contact' site with the target country</annotation>
			</simple>
			<simple entity="has_active_tradition" type="{tradition}" scope="country">
				<annotation>
        	Checks if a country has the given tradition or tradition swap.
        	Tradition specified must be the one giving effects,
        	i.e. tradition swaps with 'inherit_effects = yes' are ignored and the base tradition should be specified in those cases
        </annotation>
			</simple>

			<simple entity="has_ai_expansion_plan" type="{bool}" scope="country">
				<annotation>Checks if the country AI has any plans to expand</annotation>
			</simple>
			<simple entity="has_ai_personality" type="{?}" scope="country">
				<annotation>Checks if an AI empire has a certain personality type</annotation>
			</simple>
			<simple entity="has_ai_personality_behaviour" type="{?}" scope="country">
				<annotation>Checks if a country has a certain AI personality behavior</annotation>
			</simple>

			<simple entity="has_ambient_object_flag" type="{flag}" scope="ambient_object">
				<annotation>Checks if the ambient object has a specific flag</annotation>
			</simple>
			<simple entity="has_anomaly" type="{bool}" scope="planet">
				<annotation>Checks if the planet has an anomaly</annotation>
			</simple>

			<simple entity="has_any_federation_law_in_category" type="{?}" scope="federation">
				<annotation>Checks if given law category has any active law</annotation>
			</simple>
			<simple entity="has_any_megastructure" type="{bool}" scope="galactic_object planet">
				<annotation>Checks if the scope has a megastructure</annotation>
			</simple>
			<simple entity="has_any_strategic_resource" type="{bool}" scope="planet">
				<annotation>Checks if the planet has any strategic resource</annotation>
			</simple>

			<simple entity="has_archaeology_flag" type="{flag}" scope="archaeological_site">
				<annotation>Checks if the archaeological site has a specific flag</annotation>
			</simple>

			<simple entity="has_army" type="{bool}" scope="planet">
				<annotation>Checks if the planet has an army</annotation>
			</simple>
			<simple entity="has_army_flag" type="{flag}" scope="army">
				<annotation>Checks if the army has a specific flag</annotation>
			</simple>

			<simple entity="has_ascension_perk" type="{ascension}" scope="country">
				<annotation>Checks if a country has the given ascension perk</annotation>
			</simple>

			<simple entity="has_association_status" type="{country}" scope="country">
				<annotation>Checks if the country has federation association status with target country</annotation>
			</simple>

			<simple entity="has_authority" type="{government-authority}" scope="country dlc_recommendation">
				<annotation>Checks if the current country has the specified government authority</annotation>
			</simple>

			<simple entity="has_auto_move_target" type="{bool}" scope="fleet ship">
				<annotation>Checks if the fleet/ship has an active auto-move target set</annotation>
			</simple>

			<simple entity="has_available_jobs" type="{pop-job}" scope="planet">
				<annotation>Checks that you have available job of a specific type</annotation>
			</simple>
			<simple entity="has_available_spy_power" relation="bool" type="{int}" scope="spy_network">
				<annotation>Compares the available infiltration level of the network</annotation>
			</simple>

			<simple entity="has_branch_office" type="{country}" scope="planet">
				<annotation>Checks if the planet has a branch office owned by target country/any country/no country</annotation>
				<extension>
					<enum value="yes">
						<annotation>The planet has a branch office</annotation>
					</enum>
					<enum value="no">
						<annotation>The planet has no a branch office</annotation>
					</enum>
				</extension>
			</simple>
			<simple entity="has_building" type="{building}" scope="planet">
				<annotation>Checks if the planet has any, or a specific building</annotation>
				<extension>
					<enum value="yes" />
				</extension>
			</simple>
			<simple entity="has_building_construction" type="{building}" scope="planet">
				<annotation>Checks if the planet has any, or a specific ongoing building construction</annotation>
				<extension>
					<enum value="yes" />
				</extension>
			</simple>
			<simple entity="has_built_species" type="{bool}" scope="country">
				<annotation>Checks if country has a built species defined</annotation>
			</simple>

			<complex entity="has_casus_belli" scope="country">
				<annotation>Checks if the country has a valid casus belli (any casus belli or a specific one) on the given country</annotation>

				<simple entity="target" type="{country}" min="1" />
				<simple entity="type" type="{species-rights}" />
			</complex>

			<complex entity="has_citizenship_type" scope="leader pop species">
				<annotation>Checks if a species/pop/leader has a particular citizenship type in their country</annotation>
				<simple entity="country" type="{country}" min="1" />
				<simple entity="type" type="{species-rights}" />
				<!-- ??? -->
			</complex>

			<simple entity="has_civic" type="{government-civic}" scope="country dlc_recommendation">
				<annotation>Checks if the current country has the specified civic</annotation>
			</simple>
			<complex entity="has_civic_in_slot" scope="country">
				<annotation>Checks if the country has a civic in a slot</annotation>

				<simple entity="civic" type="{government-civic}" />
				<simple entity="index" type="{int}" />
			</complex>

			<simple entity="has_claim" type="{?}" scope="country">
				<!-- country|system in one type -->
				<annotation>Checks if the country has claims on the given country or system</annotation>
			</simple>
			<simple entity="has_climate" type="{?}" scope="planet">
				<!-- localisation -->
				<annotation>Checks if the planet's climate is set to a specified string in planet_classes</annotation>
			</simple>
			<simple entity="has_closed_borders" type="{country}" scope="country">
				<annotation>Checks if the country has closed it's borders to target country</annotation>
			</simple>
			<simple entity="has_collected_system_trade_value" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the system's trade value that is collected by any country</annotation>
			</simple>
			<complex entity="has_colonization_control" scope="leader pop species">
				<annotation>Checks if the pop is prevented from migrating</annotation>

				<simple entity="country" type="{country}" min="1" />
				<simple entity="value" type="{bool}" />
			</complex>
			<simple entity="has_colony_progress" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's progress towards completing colonization</annotation>
			</simple>

			<simple entity="has_commercial_pact" type="{country}" scope="country">
				<annotation>Checks if the country has a commercial pact with target country</annotation>
			</simple>
			<simple entity="has_communications" type="{country}" scope="country">
				<annotation>Checks if the country has established communications with target country</annotation>
			</simple>

			<complex entity="has_completed_event_chain_counter" scope="country">
				<annotation>Checks if the country has completed a specific counter in an event chain</annotation>

				<simple entity="event_chain" type="{event}" min="1" />
				<simple entity="counter" type="{?}" min="1" />
			</complex>
			<simple entity="has_completed_special_project_in_log" type="{project}" scope="country">
				<annotation>Checks if the country has completed a specific special project as part of an in-progress event chain</annotation>
			</simple>

			<simple entity="has_component" type="{ship-design-component}" scope="ship">
				<annotation>Checks if a ship has a certain component</annotation>
			</simple>
			<simple entity="has_country_flag" type="{flag}" scope="country">
				<annotation>Checks if the empire has a specific flag</annotation>
			</simple>
			<complex entity="has_country_resource" scope="country">
				<annotation>Checks the country's amount of a specific stored resource</annotation>

				<simple entity="type" type="{resource}" min="1" />
				<simple entity="amount" relation="bool" type="{float}" min="1" />
			</complex>

			<simple entity="has_crisis_level" type="{?}" scope="country">
				<annotation>Checks if a country has a specific Crisis Level unlocked</annotation>
			</simple>

			<simple entity="has_current_purge" type="{bool}" scope="planet">
				<annotation>Checks if any pops are being purged on the current planet</annotation>
			</simple>

			<simple entity="has_defensive_pact" type="{country}" scope="country">
				<annotation>Checks if the country has a defensive pact with target country</annotation>
			</simple>
			<simple entity="has_deficit" type="{resource}" scope="country">
				<annotation>Checks if the country has a deficit of the defined resource</annotation>
			</simple>

			<simple entity="has_deposit" type="{deposit}" scope="deposit planet">
				<annotation>Checks if the planet has any, or a specific deposit</annotation>
				<extension>
					<enum value="yes" />
				</extension>
			</simple>
			<simple entity="has_deposit_category" type="{?}" scope="deposit">
				<annotation>Checks if a deposit has specified category</annotation>
			</simple>
			<simple entity="has_deposit_flag" type="{flag}" scope="deposit">
				<annotation>Checks if the deposit has a specific flag</annotation>
			</simple>
			<simple entity="has_deposit_for" type="{?}" scope="planet">
				<annotation>Checks if the planet has a deposit for a specific ship class</annotation>
			</simple>

			<simple entity="has_designation" type="{?}" scope="planet">
				<annotation>Checks if the colony has a certain designation</annotation>
			</simple>

			<simple entity="has_diplo_migration_treaty" type="{country}" scope="country">
				<annotation>Checks if two countries have a migration treaty</annotation>
			</simple>

			<simple entity="has_district" type="{district}" scope="planet">
				<annotation>Checks if the planet has any, or a specific district</annotation>
				<extension>
					<enum value="yes" />
				</extension>
			</simple>

			<simple entity="has_edict" type="{edict}" scope="country">
				<annotation>Checks if the country has a specific edict enabled</annotation>
			</simple>

			<simple entity="has_election_type" type="{government-authority}" scope="country">
				<annotation>Checks if the country has a specific election type</annotation>
			</simple>
			<simple entity="has_embassy" type="{country}" scope="country">
				<annotation>Checks if the country has an embassy with the target country</annotation>
			</simple>

			<simple entity="has_envoy_cooldown" type="{bool}" scope="leader">
				<annotation>Checks the scoped envoy currently has a cooldown on it's status</annotation>
			</simple>
			<complex entity="has_envoy_task" scope="leader">
				<annotation>Checks the scoped envoy's task</annotation>

				<simple entity="task" type="{event}" min="1" />
				<simple entity="target" type="{country}" />
				<!--task = improve_relations/harm_relations/federation/galactic_community/spy_network/first_contact/strengthen_imperial_authority/undermine_imperial_authority/none-->
			</complex>

			<simple entity="has_espionage_asset" type="{?}" scope="espionage_operation spy_network">
				<annotation>Checks if the scope hold an asset of specified type</annotation>
			</simple>
			<simple entity="has_espionage_asset_flag" type="{flag}" scope="espionage_asset">
				<annotation>Checks if the espionage asset has a specific flag</annotation>
			</simple>
			<simple entity="has_espionage_category" type="{?}" scope="espionage_operation">
				<annotation>Checks if the scope is of a specific category</annotation>
			</simple>
			<simple entity="has_espionage_operation_flag" type="{flag}" scope="espionage_operation">
				<annotation>Checks if the espionage operation has a specific flag</annotation>
			</simple>
			<simple entity="has_espionage_type" type="{?}" scope="espionage_operation">
				<annotation>Checks if the scope is of a specific type</annotation>
			</simple>

			<simple entity="has_established_contact" type="{country}" scope="country">
				<annotation>Checks if the country has established contact with target country</annotation>
			</simple>

			<simple entity="has_ethic" type="{ethic}" scope="country dlc_recommendation pop">
				<annotation>Checks if a country has a certain ethos</annotation>
			</simple>

			<simple entity="has_event_chain" type="{event}" scope="country">
				<annotation>Checks if the country has a specific event chain</annotation>
			</simple>

			<simple entity="has_existing_ship_design" type="{ship-design}" scope="country">
				<annotation>Checks if the country has a specific ship design available</annotation>
			</simple>

			<simple entity="has_experience" relation="bool" type="{int}" scope="leader">
				<annotation>Checks if the leader has a specific amount of experience</annotation>
			</simple>

			<simple entity="has_faction" type="{pop-faction}" scope="country">
				<annotation>Checks if the country has any instance of target faction type</annotation>
			</simple>

			<simple entity="has_failed_special_project_in_log" type="{project}" scope="country">
				<annotation>Checks if the country has failed, timed out or aborted a specific special project as part of an in-progress event chain</annotation>
			</simple>

			<simple entity="has_federation" type="{bool}" scope="country">
				<annotation>Checks if the country is in a federation</annotation>
			</simple>
			<simple entity="has_federation_flag" type="{flag}" scope="federation">
				<annotation>Checks if the federation has a specific flag</annotation>
			</simple>
			<simple entity="has_federation_law" type="{?}" scope="federation">
				<annotation>Checks if given law has been enacted in scoped federation</annotation>
			</simple>
			<simple entity="has_federation_perk" type="{?}" scope="federation">
				<annotation>Checks if given perk has been unlocked in scoped federation</annotation>
			</simple>
			<simple entity="has_federation_setting" type="{?}" scope="federation">
				<annotation>Checks if given setting is on for scoped federation</annotation>
			</simple>
			<simple entity="has_federation_type" type="{?}" scope="federation">
				<annotation>Checks if federation has specific federation type</annotation>
			</simple>

			<simple entity="has_first_contact_flag" type="{flag}" scope="first_contact">
				<annotation>Checks if the first contact site has a specific flag</annotation>
			</simple>

			<simple entity="has_fleet_flag" type="{flag}" scope="fleet">
				<annotation>Checks if the fleet has a specific flag</annotation>
			</simple>
			<simple entity="has_fleet_order" type="{fleet-order}" scope="fleet ship">
				<annotation>Checks if the fleet/ship has a specific fleet order. Fleet orders include: move_to_system_point_order orbit_planet_order build_orbital_station_order build_space_station_order colonize_planet_order survey_planet_order research_discovery_orde research_anomaly_order collect_data_fleet_order upgrade_design_at_starbase_fleet_order upgrade_design_at_orbitable_fleet_order return_fleet_order repair_fleet_order evade_hostiles_order follow_order assist_research_order land_armies_order merge_fleet_order aggressive_stance_fleet_order auto_explore_order auto_patrol_order build_megastructure_fleet_order destroy_planet_order planet_killer_weapon_windup_order planet_killer_weapon_fire_order explore_bypass_order use_bypass_order jumpdrive_order  jumpdrive_windup experimental_subspace_navigation_fleet_order excavate_archaeological_site_fleet_order</annotation>
			</simple>

			<simple entity="has_galactic_custodian" type="{bool}">
				<annotation>Checks if the Galactic Community has named a Custodian</annotation>
			</simple>
			<simple entity="has_galactic_emperor" type="{bool}">
				<annotation>Checks if the Galactic Emperor has taken over</annotation>
			</simple>
			<simple entity="has_global_flag" type="{flag}">
				<annotation>Checks if a Global Flag has been set</annotation>
			</simple>

			<simple entity="has_government" type="{government}" scope="country">
				<annotation>Checks if the country has a specific government type, or any government at all</annotation>
				<extension>
					<enum value="yes" />
					<enum value="no" />
					<enum value="any" />
					<enum value="none" />
				</extension>
			</simple>
			<simple entity="has_ground_combat" type="{bool}" scope="planet">
				<annotation>Checks if ground combat is taking place on the planet</annotation>
			</simple>

			<simple entity="has_hp" relation="bool" type="{int}" scope="ship">
				<annotation>Checks the ship's hull points</annotation>
			</simple>
			<simple entity="has_hp_percentage" relation="bool" type="{float}" scope="fleet ship">
				<annotation>Checks a fleet or ship's hit points percentage</annotation>
			</simple>

			<simple entity="has_hyperlane_to" type="{system}" scope="galactic_object">
				<annotation>Checks if the system has a hyperlane connection to target system</annotation>
			</simple>

			<complex entity="has_intel" scope="country">
				<annotation>Checks if the specified intel is available for the target country (stale intel will not return true)</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="intel" type="{?}" />
			</complex>
			<complex entity="has_intel_level" scope="country">
				<annotation>Checks the country's intel level on a category for the target country</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="category" type="{?}" />
				<simple entity="level" type="{int}" />
			</complex>
			<complex entity="has_intel_report" scope="country">
				<annotation>Checks if the country has intel report of at least the specified level on a category for the target country</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="category" type="{?}" />
				<simple entity="level" type="{int}" />
			</complex>

			<simple entity="has_invalid_civic" type="{government-civic}" scope="country">
				<annotation>Checks if the current country has a certain civic and if it's invalidated</annotation>
			</simple>

			<simple entity="has_job" type="{pop-job}" scope="pop">
				<annotation>Checks if the pop has a specific job, or any job if set to yes</annotation>
				<extension>
					<enum value="yes" />
				</extension>
			</simple>
			<simple entity="has_job_category" type="{?}" scope="pop">
				<annotation>Checks if the pop is currently working this strata job. Returns false if unemployed</annotation>
			</simple>

			<simple entity="has_leader_flag" type="{flag}" scope="leader">
				<annotation>Checks if the leader has a specific flag</annotation>
			</simple>
			<simple entity="has_level" relation="bool" type="{int}" scope="leader">
				<annotation>Checks if the leader has a specific experience level</annotation>
			</simple>

			<complex entity="has_living_standard" scope="leader pop species">
				<annotation>Checks if a species/pop/leader has a particular living standard in their country</annotation>

				<simple entity="country" type="{country}" />
				<simple entity="type" type="{species-rights}" />
			</complex>

			<simple entity="has_mandate" type="{government-mandate}" scope="leader">
				<annotation>Checks if the leader has any, or a specific mandate</annotation>
				<extension>
					<enum value="yes" />
					<enum value="no" />
				</extension>
			</simple>

			<simple entity="has_megastructure" type="{megastructure}" scope="country galactic_object">
				<annotation>Checks if a country or star has a mega reference</annotation>
			</simple>
			<simple entity="has_megastructure_flag" type="{flag}" scope="megastructure">
				<annotation>Checks if the mega reference has a specific flag</annotation>
			</simple>

			<simple entity="has_menace_perk" type="{?}" scope="country">
				<annotation>Checks if a country has a specific Menace Perk unlocked</annotation>
			</simple>

			<simple entity="has_migration_access" type="{country}" scope="country">
				<annotation>Checks if the country has migration access to target country</annotation>
			</simple>
			<complex entity="has_migration_control" scope="leader pop species">
				<annotation>Checks if the pop is prevented from migrating</annotation>
				<!--has_migration_control = { value = bool country = scope }-->
				<simple entity="country" type="{country}" />
				<!-- ??? -->
				<simple entity="value" type="{bool}" />
			</complex>

			<complex entity="has_military_service_type" scope="leader pop species">
				<annotation>Checks if a species/pop/leader has a particular military service type in their country</annotation>

				<simple entity="country" type="{country}" min="1" />
				<simple entity="value" type="{bool}" min="1" />
			</complex>

			<simple entity="has_mining_station" type="{bool}" scope="planet">
				<annotation>Checks if the planet has an orbital mining station</annotation>
			</simple>

			<simple entity="has_mission" type="{mission}" scope="fleet">
				<annotation>Checks if the observation post has a specific mission</annotation>
			</simple>

			<simple entity="has_modifier" type="{modifier}" scope="country espionage_operation federation galactic_object megastructure planet pop pop_faction ship spy_network">
				<annotation>Checks if the scope object has a certain modifier</annotation>
			</simple>

			<complex entity="has_monthly_income" scope="country">
				<annotation>Checks the country's monthly income of a specific resource</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>

			<simple entity="has_moon" type="{bool}" scope="planet">
				<annotation>Checks if the planet has a moon</annotation>
			</simple>

			<simple entity="has_natural_wormhole" type="{bool}" scope="galactic_object">
				<annotation>Returns true if the scopes system contains at least one natural wormhole</annotation>
			</simple>

			<simple entity="has_non_aggression_pact" type="{country}" scope="country">
				<annotation>Checks if the country has a non-aggression pact with target country</annotation>
			</simple>

			<simple entity="has_notification_modifier" type="{?}" scope="country">
				<annotation>Checks if a country has a certain notification modifier</annotation>
			</simple>

			<simple entity="has_observation_outpost" type="{bool}" scope="planet">
				<annotation>Checks if the planet has an observation post</annotation>
			</simple>

			<complex entity="has_opinion_modifier" scope="country">
				<annotation>Checks if the country has a specific opinion modifier towards target country or anyone</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="modifier" type="{modifier}" />
				<simple entity="is_reverse" type="{bool}" />
			</complex>

			<simple entity="has_orbital_bombardment" type="{bool}" scope="planet">
				<annotation>Checks whether a planet is under bombardment</annotation>
			</simple>
			<simple entity="has_orbital_bombardment_stance" type="{fleet-stance}" scope="planet">
				<annotation>Checks to what degree the planet is being bombarded</annotation>
			</simple>
			<simple entity="has_orbital_station" type="{bool}" scope="planet">
				<annotation>Checks if the planet has any kind of orbital station</annotation>
			</simple>

			<simple entity="has_origin" type="{government-origin}" scope="country dlc_recommendation">
				<annotation>Checks if scoped country has specified origin</annotation>
			</simple>

			<simple entity="has_overlord" type="{country}" scope="country">
				<annotation>Checks if the target country is the country's overlord</annotation>
			</simple>

			<simple entity="has_owner" type="{bool}" scope="galactic_object planet">
				<annotation>Checks if the planet is colonized (in planet scope) or the system has an owner (in system scope)</annotation>
			</simple>

			<simple entity="has_planet_class" type="{planet}" scope="galactic_object">
				<annotation>Checks if the system has planet of specific class</annotation>
			</simple>
			<simple entity="has_planet_flag" type="{flag}" scope="planet">
				<annotation>Checks if the planet has a specific flag</annotation>
			</simple>
			<simple entity="has_planet_modifier" type="{modifier}" scope="planet">
				<annotation>Checks if the planet has a specific planet modifier</annotation>
			</simple>
			<simple entity="has_planetary_ascension_tier" relation="bool" type="{int}" scope="planet">
				<annotation>Checks if the planet's ascension tier is as specified</annotation>
			</simple>

			<complex entity="has_point_of_interest" scope="ambient_object country fleet galactic_object planet ship">
				<annotation>Checks if the scoped country has a specific point of interest in it's situation log</annotation>

				<simple entity="poi" type="{?}" min="1" />
			</complex>

			<simple entity="has_policy_flag" type="{policy}" scope="country">
				<annotation>Checks if the country has a specific policy</annotation>
			</simple>

			<simple entity="has_pop_faction_flag" type="{flag}" scope="pop pop_faction">
				<annotation>Checks if the pop faction has a specific flag</annotation>
			</simple>
			<simple entity="has_pop_flag" type="{flag}" scope="pop">
				<annotation>Checks if the pop has a specific flag</annotation>
			</simple>

			<complex entity="has_population_control" scope="leader pop species">
				<annotation>Checks if the pop is prevented from reproducing</annotation>

				<simple entity="country" type="{country}" min="1" />
				<simple entity="value" type="{bool}" min="1" />
			</complex>

			<simple entity="has_potential_claims" type="{bool}" scope="country">
				<annotation>Checks if the country has any potential claims they can make</annotation>
			</simple>

			<simple entity="has_presence" type="{bool}" scope="galactic_object">
				<annotation>Checks if a system contains any fleets, stations, mega references or colonized planets</annotation>
			</simple>

			<complex entity="has_purge_type" scope="leader pop species">
				<annotation>Checks if a species/pop/leader has a particular purge type in their country</annotation>

				<simple entity="country" type="{country}" min="1" />
				<simple entity="type" type="{?}" min="1" />
			</complex>

			<complex entity="has_relation_flag" scope="country">
				<annotation>Checks if the country has a relation flag towards target country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="flag" type="{flag}" min="1" />
			</complex>

			<simple entity="has_relic" type="{relic}" scope="country">
				<annotation>Checks if the scoped country has the specified relic</annotation>
			</simple>

			<simple entity="has_research_agreement" type="{country}" scope="country">
				<annotation>Checks if two countries have a research agreement</annotation>
			</simple>
			<simple entity="has_research_station" type="{bool}" scope="planet">
				<annotation>Checks if the planet has an orbital research station</annotation>
			</simple>

			<complex entity="has_resource" scope="country deposit planet" short="{bool}">
				<annotation>Checks if the planet has a specific amount of a specific resource</annotation>

				<simple entity="type" type="{resource}" min="1" />
				<simple entity="amount" relation="bool" type="{int}" min="1" />
			</complex>

			<simple entity="has_ring" type="{bool}" scope="planet">
				<annotation>Checks if the planet has a planetary ring</annotation>
			</simple>
			<simple entity="has_rival" type="{country}" scope="country">
				<annotation>Checks if the target country is the country's rival</annotation>
			</simple>
			<simple entity="has_ruler_trait" type="{trait}" scope="leader">
				<annotation>Checks if a leader has a certain ruler trait, even if they are not currently ruler</annotation>
			</simple>

			<simple entity="has_same_ethos" type="{country}" scope="country pop">
				<annotation>Checks if a country has the same ethos (complete set of ethics) as a country or pop</annotation>
			</simple>

			<simple entity="has_sector_flag" type="{flag}" scope="sector">
				<annotation>Checks if the sector has a specific flag</annotation>
			</simple>
			<simple entity="has_sector_focus" type="{?}" scope="sector">
				<annotation>Checks if the sector has a certain focus</annotation>
			</simple>
			<simple entity="has_sector_type" type="{?}" scope="sector">
				<annotation>Checks if the sector has a specific type</annotation>
			</simple>

			<simple entity="has_seen_any_bypass" type="{bypass}" scope="country">
				<annotation>Checks the scoped country has ever encountered a bypass of a given type before</annotation>
			</simple>
			<simple entity="has_seen_specific_bypass" type="{bypass}" scope="country">
				<annotation>Checks the scoped country has encountered a specific bypass before</annotation>
			</simple>

			<simple entity="has_ship_flag" type="{flag}" scope="ship">
				<annotation>Checks if the ship has a specific flag</annotation>
			</simple>
			<simple entity="has_ship_owner_type" type="{?}" scope="design fleet ship">
				<annotation>Checks if the ship/fleet/design has a specific owner type (country/federation/galactic_community/global_ship_design)</annotation>
			</simple>

			<simple entity="has_situation_flag" type="{flag}" scope="situation">
				<annotation>Checks if the situation has a specific flag</annotation>
			</simple>

			<simple entity="has_skill" relation="bool" type="{int}" scope="leader">
				<annotation>Checks if the leader has a specific experience level</annotation>
			</simple>

			<complex entity="has_slavery_type" scope="leader pop species">
				<annotation>Checks if a species/pop/leader has a particular slavery type in their country</annotation>

				<simple entity="country" type="{country}" min="1" />
				<simple entity="type" type="{?}" min="1" />
			</complex>

			<simple entity="has_special_project" type="{project}" scope="country">
				<annotation>Checks if the country has a specific special project available</annotation>
			</simple>

			<simple entity="has_species_flag" type="{flag}" scope="species">
				<annotation>Checks if the species has a specific flag</annotation>
			</simple>

			<simple entity="has_spy_power" relation="bool" type="{int}" scope="spy_network">
				<annotation>Compares the infiltration level of the network</annotation>
			</simple>
			<simple entity="has_spynetwork" type="{bool}" scope="country">
				<annotation>Checks if scoped country has any spynetworks with a value &gt; 0</annotation>
			</simple>
			<simple entity="has_spynetwork_flag" type="{flag}" scope="spy_network">
				<annotation>Checks if the spy network has a specific flag</annotation>
			</simple>
			<simple entity="has_spynetwork_value" relation="bool" type="{int}" scope="spy_network">
				<annotation>Compares spy network value of the scoped object</annotation>
			</simple>

			<simple entity="has_stage_modifier" type="{modifier}" scope="espionage_operation">
				<annotation>Checks if the espionage operation has a certain modifier specific for the current stage</annotation>
			</simple>

			<complex entity="has_stale_intel" scope="country">
				<annotation>Checks if the specified intel is stale for the target country (available intel will not return true)</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="intel" type="{?}" />
			</complex>

			<simple entity="has_star_flag" type="{flag}" scope="dlc_recommendation galactic_object">
				<annotation>Checks if the solar system has a specific flag</annotation>
			</simple>

			<simple entity="has_starbase_building" type="{starbase-building}" scope="starbase">
				<annotation>Checks if the starbase has a specific building</annotation>
			</simple>
			<simple entity="has_starbase_flag" type="{flag}" scope="starbase">
				<annotation>Checks if the starbase has a specific flag</annotation>
			</simple>
			<simple entity="has_starbase_module" type="{starbase-module}" scope="starbase">
				<annotation>Checks if the starbase has a specific module</annotation>
			</simple>
			<simple entity="has_starbase_size" relation="bool" type="{ship-size}" scope="starbase">
				<annotation>Compares the starbase ship size</annotation>
			</simple>

			<simple entity="has_status" type="{?}" scope="fleet ship">
				<annotation>Checks the current status of the scoped ship or fleet</annotation>
			</simple>

			<simple entity="has_strategic_resource" type="{bool}" scope="planet">
				<annotation>Checks if the planet has any strategic resource</annotation>
			</simple>

			<simple entity="has_surveyed_class" type="{planet}" scope="country">
				<annotation>Checks if the country has surveyed any planet of a specific class</annotation>
			</simple>

			<simple entity="has_system_trade_value" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the system's total trade value (collected and uncollected)</annotation>
			</simple>

			<simple entity="has_tech_option" type="{technology}" scope="country">
				<annotation>Checks if the country has a tech research option currently available</annotation>
			</simple>
			<simple entity="has_technology" type="{technology}" scope="country">
				<annotation>Checks if the country has a technology (of at least a specific level)</annotation>
			</simple>

			<simple entity="has_trade_route" type="{bool}" scope="galactic_object">
				<annotation>Checks if a system has trade route going through</annotation>
			</simple>

			<simple entity="has_tradition" type="{tradition}" scope="country">
				<annotation>Checks if a country has the given tradition</annotation>
			</simple>

			<simple entity="has_trait" type="{trait}" scope="country dlc_recommendation leader pop species">
				<annotation>Checks if a pop/leader/species/country's dominant species has a certain trait</annotation>
			</simple>

			<simple entity="has_tributary" type="{country}" scope="country">
				<annotation>Checks if the target country is a tributary of the current scope</annotation>
			</simple>
			<simple entity="has_truce" type="{country}" scope="country">
				<annotation>Checks if the country has a truce with target country</annotation>
			</simple>

			<simple entity="has_uncollected_system_trade_value" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the system's uncollected trade value (i.e. that no country profits from)</annotation>
			</simple>

			<simple entity="has_unemployed_pop_of_category" type="{?}" scope="planet">
				<annotation>Checks if the planet has an unemployed pop of a category</annotation>
			</simple>
			<simple entity="has_unlocked_all_traditions" type="{bool}" scope="country">
				<annotation>Checks if the country has unlocked all traditions</annotation>
			</simple>

			<simple entity="has_valid_ai_personality" type="{bool}" scope="country">
				<annotation>Checks if the country has a valid AI personality</annotation>
			</simple>
			<simple entity="has_valid_civic" type="{government-civic}" scope="country">
				<annotation>Checks if the current country has a certain civic and if it's validated</annotation>
			</simple>

			<simple entity="has_war_flag" type="{flag}" scope="war">
				<annotation>Checks if the war has a specific flag</annotation>
			</simple>
			<simple entity="has_war_goal" type="{bool}">
				<annotation>Checks if a war goal is set. Only works in diplomatic phrases</annotation>
			</simple>

			<complex entity="hidden_trigger" type="{trigger}">
				<annotation>Hides the tooltip for the triggers within</annotation>
			</complex>

			<simple entity="highest_threat" relation="bool" type="{int}" scope="country">
				<annotation>Checks the countrys' highest threat against it</annotation>
			</simple>

			<simple entity="host_has_dlc" type="{string}">
				<annotation>Checks if the host has a specific DLC enabled</annotation>
			</simple>




			<simple entity="ideal_planet_class" type="{planet}" scope="country pop species">
				<annotation>Checks if the pop, species or country's ideal planet class is a specific class</annotation>
			</simple>
			<simple entity="imperial_authority" relation="bool" type="{int}">
				<annotation>Checks imperial authority</annotation>
			</simple>
			<simple entity="in_breach_of" type="{?}" scope="country">
				<!-- resolution; list of { key = ... } -->
				<annotation>Checks if the scoped country is in breach of the specified resolution (or would be, were it to be enacted)</annotation>
			</simple>
			<simple entity="income" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's monthly energy credit income</annotation>
			</simple>

			<complex entity="intel" scope="country">
				<annotation>Checks the country's intel on the target country</annotation>

				<simple entity="who" type="{country}" />
				<simple entity="value" type="{int}" />
			</complex>
			<complex entity="intel_level" scope="country">
				<annotation>Checks the country's intel level of target system</annotation>

				<simple entity="system" type="{system}" />
				<simple entity="level" type="{?}" />
			</complex>

			<simple entity="is_active_resolution" type="{?}">
				<!-- resolution -->
				<annotation>Checks if the provided Resolution is active in the Community</annotation>
			</simple>
			<simple entity="is_advisor_active" type="{bool}" scope="country">
				<annotation>checks if a country has an advisor</annotation>
			</simple>
			<simple entity="is_ai" type="{bool}" scope="country">
				<annotation>Checks if the country is played by the AI</annotation>
			</simple>
			<simple entity="is_alliance_fleet" type="{bool}" scope="fleet">
				<annotation>Checks if the scoped fleet is an alliance fleet</annotation>
			</simple>
			<simple entity="is_ambient_object_type" type="{ambient}" scope="ambient_object">
				<annotation>Checks if the ambient object is a specific type</annotation>
			</simple>
			<simple entity="is_angry_to" type="{country}" scope="country">
				<annotation>Checks if the country has an angry attitude towards target country</annotation>
			</simple>
			<simple entity="is_archetype" type="{species-archotype}" scope="species">
				<annotation>Checks if species has specified archetype</annotation>
			</simple>
			<simple entity="is_army" type="{army}" scope="army">
				<annotation>Checks if the army is the same as target army</annotation>
			</simple>
			<simple entity="is_arrogant_to" type="{country}" scope="country">
				<annotation>Checks if the country has a arrogant attitude towards target country</annotation>
			</simple>
			<simple entity="is_artificial" type="{bool}" scope="planet">
				<annotation>Checks if the planet is artificial</annotation>
			</simple>
			<simple entity="is_asteroid" type="{bool}" scope="planet">
				<annotation>Checks if the planet is an asteroid</annotation>
			</simple>
			<simple entity="is_at_war" type="{bool}" scope="country">
				<annotation>Checks if the country is at war</annotation>
			</simple>
			<simple entity="is_at_war_with" type="{country}" scope="country">
				<annotation>Checks if the country is at war with the target country</annotation>
			</simple>

			<simple entity="is_being_assimilated" type="{bool}" scope="pop">
				<annotation>Checks if the pop is being assimilated</annotation>
			</simple>
			<simple entity="is_being_purged" type="{bool}" scope="pop">
				<annotation>Checks if the pop is being purged</annotation>
			</simple>
			<simple entity="is_being_repaired" type="{bool}" scope="fleet ship">
				<annotation>Checks if the fleet or ship is being repaired</annotation>
			</simple>
			<simple entity="is_belligerent_to" type="{country}" scope="country">
				<annotation>Checks if the country has a belligerent attitude towards target country</annotation>
			</simple>
			<simple entity="is_berserker_to" type="{country}" scope="country">
				<annotation>Checks if the country has a berserker attitude towards target country</annotation>
			</simple>
			<simple entity="is_blocker" type="{bool}" scope="deposit">
				<annotation>Checks if scoped deposit is a blocker-type</annotation>
			</simple>
			<simple entity="is_bottleneck_system" type="{bool}" scope="galactic_object">
				<annotation>Checks if the system is bottleneck within the range 'NDefines::NGameplay::SYSTEM_BOTTLENECK_RADIUS'</annotation>
			</simple>
			<simple entity="is_bridge" type="{bool}" scope="galactic_object">
				<annotation>Checks if a system has the bridge flag or not</annotation>
			</simple>

			<simple entity="is_capital" type="{bool}" scope="planet">
				<annotation>Checks if the planet is it's owner's capital</annotation>
			</simple>
			<simple entity="is_capital_system" type="{bool}" scope="galactic_object">
				<annotation>Checks if the solar system has it's owner's capital</annotation>
			</simple>
			<simple entity="is_civilian" type="{bool}" scope="fleet ship">
				<annotation>Checks if the scoped fleet or ship is civilian (as set in ship sizes)</annotation>
			</simple>
			<simple entity="is_colonizable" type="{bool}" scope="planet">
				<annotation>Checks if the planet can theoretically be colonized</annotation>
			</simple>
			<simple entity="is_colony" type="{bool}" scope="planet">
				<annotation>Checks if the planet is colonized</annotation>
			</simple>
			<simple entity="is_constructing" type="{?}" scope="fleet ship">
				<!-- megastructure | megastructure type | starbase | mining_station | research_station | observation_post | ship class -->
				<annotation>Checks if the scoped construction ship is building the specified thing</annotation>
			</simple>
			<simple entity="is_controlled_by" type="{country}" scope="planet">
				<annotation>Checks if the planet is controlled by the target country</annotation>
			</simple>
			<simple entity="is_cordial_to" type="{country}" scope="country">
				<annotation>Checks if the country has a cordial attitude towards target country</annotation>
			</simple>
			<simple entity="is_counter_espionage" relation="bool" type="{float}" scope="country">
				<annotation>Compares counter espionage of the scoped object</annotation>
			</simple>
			<simple entity="is_country" type="{country}" scope="country">
				<annotation>Checks if the country is the same as target country</annotation>
			</simple>
			<simple entity="is_country_type" type="{country-type}" scope="country">
				<annotation>Checks if the country is a specific type</annotation>
			</simple>
			<simple entity="is_criminal_syndicate" type="{bool}" scope="country">
				<annotation>Checks if the country is a criminal syndicate</annotation>
			</simple>
			<simple entity="is_crises_allowed" type="{bool}">
				<annotation>Checks if current game allows crises</annotation>
			</simple>
			<simple entity="is_current_excavator_fleet" type="{fleet}" scope="archaeological_site">
				<annotation>Checks current excavator fleet</annotation>
			</simple>
			<simple entity="is_current_first_contact_stage" type="{?}" scope="first_contact">
				<annotation>Checks if the scoped first contact is at the specified stage</annotation>
			</simple>
			<simple entity="is_current_stage_clues" relation="bool" type="{int}" scope="archaeological_site first_contact">
				<annotation>Compares the current stage clues</annotation>
			</simple>
			<simple entity="is_current_stage_difficulty" relation="bool" type="{int}" scope="archaeological_site first_contact">
				<annotation>Compares the current stage difficulty</annotation>
			</simple>
			<simple entity="is_custodial_to" type="{country}" scope="country">
				<annotation>Checks if the country has a custodial attitude towards target country</annotation>
			</simple>
			<simple entity="is_custom_capital_location" type="{bool}" scope="fleet galactic_object planet ship">
				<annotation>Checks if the spatial object is it's owner's custom capital location</annotation>
			</simple>

			<simple entity="is_damaged" type="{bool}" scope="ship">
				<annotation>Checks if the ship is damaged</annotation>
			</simple>
			<simple entity="is_defensive_army" type="{bool}" scope="army">
				<annotation>Checks if the army is defensive</annotation>
			</simple>
			<simple entity="is_deposit_type" type="{deposit}" scope="deposit">
				<annotation>Checks if deposit is specified type</annotation>
			</simple>
			<simple entity="is_designable" type="{bool}" scope="design fleet ship">
				<annotation>Checks if the scoped ship design, ship or fleet (all ships) has a designable ship size</annotation>
			</simple>
			<simple entity="is_difficulty" relation="bool" type="{int}" min-value="0" max-value="5">
				<annotation>Checks the game's difficulty level</annotation>
			</simple>
			<simple entity="is_disabled" type="{bool}" scope="fleet ship">
				<annotation>Checks if the fleet or ship is disabled</annotation>
			</simple>
			<simple entity="is_disloyal_to" type="{country}" scope="country">
				<annotation>Checks if the country has a disloyal attitude towards target country</annotation>
			</simple>
			<simple entity="is_dismissive_to" type="{country}" scope="country">
				<annotation>Checks if the country has a dismissive attitude towards target country</annotation>
			</simple>
			<simple entity="is_domineering_to" type="{country}" scope="country">
				<annotation>Checks if the country has a domineering attitude towards target country</annotation>
			</simple>

			<simple entity="is_enigmatic_to" type="{country}" scope="country">
				<annotation>Checks if the country has a enigmatic attitude towards target country</annotation>
			</simple>
			<simple entity="is_enslaved" type="{bool}" scope="pop">
				<annotation>Checks if the pop is a slave</annotation>
			</simple>
			<simple entity="is_espionage_operation_chapter" relation="bool" type="{int}" scope="espionage_operation">
				<annotation>Compares the current espionage operation chapter index</annotation>
			</simple>
			<simple entity="is_espionage_operation_days_to_next_die_roll" relation="bool" type="{int}" scope="espionage_operation">
				<annotation>Compares days to next die roll</annotation>
			</simple>
			<simple entity="is_espionage_operation_difficulty" relation="bool" type="{int}" scope="espionage_operation">
				<annotation>Compares the espionage operation difficulty</annotation>
			</simple>
			<simple entity="is_espionage_operation_last_die_result" relation="bool" type="{int}" scope="espionage_operation">
				<annotation>Compares the last dice roll</annotation>
			</simple>
			<simple entity="is_espionage_operation_score" relation="bool" type="{int}" scope="espionage_operation">
				<annotation>Compares the current espionage score</annotation>
			</simple>
			<simple entity="is_espionage_operation_score_no_die" relation="bool" type="{int}" scope="espionage_operation">
				<annotation>Compares the current espionage score excluding the current die roll</annotation>
			</simple>
			<simple entity="is_event_leader" type="{bool}" scope="leader">
				<annotation>Checks if a leader is a special event leader (defined in 'create_leader')</annotation>
			</simple>
			<simple entity="is_exact_same_species" type="{species-class}" scope="army country leader pop ship species">
				<annotation>Checks if the scoped object is originally of the same species, or currently of the exact same species instance, as another object</annotation>
			</simple>

			<simple entity="is_federation_leader" type="{bool}" scope="country">
				<annotation>Checks if the country is the leader of their federation</annotation>
			</simple>
			<simple entity="is_fleet_idle" type="{bool}" scope="fleet ship">
				<annotation>Checks if the ship/fleet is idfle</annotation>
			</simple>
			<simple entity="is_forced_friendly" type="{country}" scope="country">
				<annotation>Checks if the country has been set to be friendly towards target country via 'set_faction_hostility'</annotation>
			</simple>
			<simple entity="is_forced_neutral" type="{country}" scope="country">
				<annotation>Checks if the country has been set to be neutral towards target country via 'set_faction_hostility'</annotation>
			</simple>
			<simple entity="is_friendly_to" type="{country}" scope="country">
				<annotation>Checks if the country has a friendly attitude towards target country</annotation>
			</simple>

			<simple entity="is_galactic_community_formed" type="{bool}">
				<annotation>Checks if the Galactic Community has been formed</annotation>
			</simple>
			<simple entity="is_galactic_community_member" type="{bool}" scope="country">
				<annotation>Checks if scoped country is part of the Galactic Community</annotation>
			</simple>
			<simple entity="is_galactic_council_established" type="{bool}">
				<annotation>Checks if the Galactic Council has been established</annotation>
			</simple>
			<simple entity="is_galactic_custodian" type="{bool}" scope="country">
				<annotation>Checks if an empire is Custodian of the Galactic Council</annotation>
			</simple>
			<simple entity="is_galactic_emperor" type="{bool}" scope="country">
				<annotation>Checks if an empire is the Galactic Emperor</annotation>
			</simple>
			<simple entity="is_guaranteeing" type="{country}" scope="country">
				<annotation>Checks if the country is guaranteeing the independence of target country</annotation>
			</simple>

			<simple entity="is_half_species" type="{species-class}" scope="species">
				<annotation>Checks if scoped species is half species of specific/any species</annotation>
				<extension>
					<enum value="any" />
				</extension>
			</simple>
			<simple entity="is_harming_relations_with" type="{country}" scope="country">
				<annotation>Checks if the country has an envoy sent to the target country to harm relations</annotation>
			</simple>
			<simple entity="is_homeworld" type="{bool}" scope="planet">
				<annotation>Checks if the planet is it's owner's homeworld</annotation>
			</simple>
			<simple entity="is_hostile" type="{country}" scope="country">
				<annotation>Checks if the country is hostile towards target country</annotation>
			</simple>
			<simple entity="is_hostile_to" type="{country}" scope="country">
				<annotation>Checks if the country has a hostile attitude towards target country</annotation>
			</simple>

			<simple entity="is_ideal" type="{bool}" scope="planet">
				<annotation>Checks if the planet is ideal (as set in planet_classes)</annotation>
			</simple>
			<complex entity="is_ideal_planet_class" scope="planet">
				<annotation>Checks if the planet is of the ideal class for target country, species or pop</annotation>

				<simple entity="who" type="{?}" min="1" />
				<simple entity="status" type="{bool}" />
			</complex>
			<simple entity="is_idle" type="{bool}" scope="leader">
				<annotation>Checks if scoped leader is idle</annotation>
			</simple>
			<simple entity="is_imperious_to" type="{country}" scope="country">
				<annotation>Checks if the country has a imperious attitude towards target country</annotation>
			</simple>
			<simple entity="is_improving_relations_with" type="{country}" scope="country">
				<annotation>Checks if the country has an envoy sent to the target country to improve relations</annotation>
			</simple>
			<simple entity="is_in_breach_of_any" type="{bool}" scope="country">
				<annotation>Checks if an empire is in breach of any galactic resolution. Warning: quite performance intensive</annotation>
			</simple>
			<simple entity="is_in_cluster" type="{galaxy-cluster}" scope="galactic_object planet">
				<annotation>Checks if the system or planet belongs to a specific spawning cluster</annotation>
			</simple>
			<simple entity="is_in_combat" type="{bool}" scope="fleet ship">
				<annotation>Checks if the fleet or ship is engaged in combat</annotation>
			</simple>
			<simple entity="is_in_federation_with" type="{country}" scope="country">
				<annotation>Checks if the country is in a federation with target country</annotation>
			</simple>
			<simple entity="is_in_frontier_space" type="{bool}" scope="fleet galactic_object planet ship">
				<annotation>checks if the system/planet/fleet/ship is in frontier space</annotation>
			</simple>
			<simple entity="is_in_sensor_range" type="{?}" scope="country">
				<annotation>Checks if the specified ship, fleet, planet or system is within sensor range of the scoped country</annotation>
			</simple>
			<simple entity="is_in_sensor_range_of_country" type="{country}" scope="fleet galactic_object planet ship">
				<annotation>Checks if the scoped ship, fleet, planet or system is within sensor range of the specified country</annotation>
			</simple>
			<simple entity="is_inside_border" type="{country}" scope="fleet galactic_object planet ship">
				<annotation>Checks if the system/planet/fleet/ship is inside the borders of the target country</annotation>
			</simple>
			<simple entity="is_inside_nebula" type="{bool}" scope="fleet galactic_object planet ship">
				<annotation>checks if the system/planet/fleet/ship is inside a nebula</annotation>
			</simple>
			<simple entity="is_ironman" type="{bool}">
				<annotation>Checks if current game is running in ironman mode</annotation>
			</simple>

			<simple entity="is_last_lost_relic" type="{relic}" scope="country">
				<annotation>Checks whether the relic passed in parameter is the last relic lost by the country int the current scope</annotation>
			</simple>
			<simple entity="is_last_received_relic" type="{relic}" scope="country">
				<annotation>Checks whether the relic passed in parameter is the last relic received by the country int the current scope</annotation>
			</simple>
			<simple entity="is_loyal_to" type="{country}" scope="country">
				<annotation>Checks if the country has a loyal attitude towards target country</annotation>
			</simple>

			<simple entity="is_majority_species" type="{species-class}" scope="planet">
				<annotation>Checks if the specified species is the majority species on the current planet</annotation>
			</simple>
			<simple entity="is_megastructure_type" type="{megastructure}" scope="megastructure">
				<annotation>Compares the type of scope's megastructure to a type from the database</annotation>
			</simple>
			<simple entity="is_mobile" type="{bool}" scope="fleet">
				<annotation>Checks if the scoped fleet can move</annotation>
			</simple>
			<simple entity="is_moon" type="{bool}" scope="planet">
				<annotation>Checks if the planet is the moon of another planet</annotation>
			</simple>
			<simple entity="is_multiplayer" type="{bool}">
				<annotation>Checks if the game is running in multiplayer</annotation>
			</simple>

			<simple entity="is_neighbor_of" type="{country}" scope="country fleet galactic_object planet ship">
				<annotation>Checks if the country/planet is neighbors with target country</annotation>
			</simple>
			<simple entity="is_neutral_to" type="{country}" scope="country">
				<annotation>Checks if the country has a neutral attitude towards target country</annotation>
			</simple>

			<simple entity="is_occupied_flag" type="{bool}" scope="planet">
				<annotation>Checks if the planet is under military occupation</annotation>
			</simple>
			<simple entity="is_on_market" type="{resource}">
				<annotation>Checks if resource is enabled on the Galactic Market</annotation>
			</simple>
			<simple entity="is_original_owner" type="{country}" scope="planet">
				<annotation>Checks if the target country is the planet's original owner</annotation>
			</simple>
			<simple entity="is_overlord" type="{bool}" scope="country">
				<annotation>Checks if the country is the overlord of any subject countries</annotation>
			</simple>
			<simple entity="is_overlord_to" type="{country}" scope="country">
				<annotation>Checks if the country has an overlord attitude towards target country</annotation>
			</simple>
			<simple entity="is_owned_by" type="{country}" scope="archaeological_site army deposit espionage_operation first_contact fleet galactic_object leader megastructure planet pop pop_faction sector ship situation spy_network starbase">
				<annotation>Checks if the current scope is owned by the target country</annotation>
			</simple>

			<simple entity="is_part_of_galactic_council" type="{bool}" scope="country">
				<annotation>Checks if scoped country is part of the Galactic Council</annotation>
			</simple>
			<simple entity="is_patronizing_to" type="{country}" scope="country">
				<annotation>Checks if the country has a patronizing attitude towards target country</annotation>
			</simple>
			<simple entity="is_permanent_councillor" type="{bool}" scope="country">
				<annotation>Checks if an empire has a permanent seat on the Galactic Council</annotation>
			</simple>
			<simple entity="is_pirate" type="{bool}" scope="country">
				<annotation>Checks if the country is a pirate country</annotation>
			</simple>
			<simple entity="is_planet" type="{planet}" scope="planet">
				<annotation>Checks if the planet is the same as target planet</annotation>
			</simple>
			<simple entity="is_planet_class" type="{planet}" scope="dlc_recommendation planet">
				<annotation>Checks if the planet is of a certain class</annotation>
			</simple>
			<complex entity="is_point_of_interest" scope="ambient_object country galactic_object planet ship">
				<annotation>Checks if the country/system/planet/ambient object/ship has a specific point of interest for a specific event chain for a specific country</annotation>

				<simple entity="id" type="{?}" />
				<simple entity="event_chain" type="{event}" />
				<simple entity="owner" type="{country}" />
			</complex>
			<simple entity="is_pop" type="{pop}" scope="pop">
				<annotation>Checks if the pop is the same as target pop</annotation>
			</simple>
			<simple entity="is_pop_category" type="{?}" scope="pop">
				<annotation>Checks if the pop has the chosen pop category</annotation>
			</simple>
			<simple entity="is_pop_faction_type" type="{pop-faction}" scope="pop_faction">
				<annotation>Checks the faction's type</annotation>
			</simple>
			<simple entity="is_preferred_weapons" type="{ship-design-component-tag}" scope="country">
				<annotation>Checks if the country's AI prefers weapons using this component tag</annotation>
			</simple>
			<simple entity="is_preventing_anomaly" type="{bool}" scope="planet">
				<annotation>Checks if the planet is prevented from generating anomalies</annotation>
			</simple>
			<simple entity="is_primary_star" type="{bool}" scope="planet">
				<annotation>Checks if the planet is the system's primary star</annotation>
			</simple>
			<simple entity="is_primitive" type="{bool}" scope="country">
				<annotation>Checks if the country is a primitive, pre-FTL civilization</annotation>
			</simple>
			<simple entity="is_proposing_resolution" type="{?}" scope="country">
				<!-- resolution/any -->
				<annotation>Checks if the scoped country is currently proposing any, or a specific resolution</annotation>
				<extension>
					<enum value="any" />
				</extension>
			</simple>
			<simple entity="is_protective_to" type="{country}" scope="country">
				<annotation>Checks if the country has a protective attitude towards target country</annotation>
			</simple>

			<simple entity="is_researching_area" type="{?}" scope="leader">
				<!-- society -->
				<annotation>Checks the scientist's field of research</annotation>
			</simple>
			<simple entity="is_researching_special_project" type="{project}" scope="country leader">
				<annotation>Checks if the country is currently researching a specific special project</annotation>
			</simple>
			<simple entity="is_researching_technology" type="{technology}" scope="country">
				<annotation>Checks if the country is currently researching a specific technology</annotation>
			</simple>
			<simple entity="is_rim_system" type="{bool}" scope="galactic_object">
				<annotation>Checks if the system is on the galactic rim</annotation>
			</simple>
			<simple entity="is_ringworld" type="{bool}" scope="planet">
				<annotation>Checks if the planet is a ringworld</annotation>
			</simple>
			<simple entity="is_rival" type="{country}" scope="country">
				<annotation>Checks if the country has a rival attitude towards target country</annotation>
			</simple>
			<simple entity="is_robot_pop" type="{bool}" scope="pop">
				<annotation>Checks if the pop is a robot</annotation>
			</simple>
			<simple entity="is_robotic" type="{bool}" scope="species">
				<annotation>Checks if the species in the scope is a robot species or not</annotation>
			</simple>
			<simple entity="is_running_espionage_operation" type="{bool}" scope="country spy_network">
				<annotation>Checks if the scope is currently running an espionage operation</annotation>
			</simple>

			<simple entity="is_same_empire" type="{country}" scope="country">
				<annotation>Checks if the country is the same as another, target country</annotation>
			</simple>
			<simple entity="is_same_species" type="{?}" scope="army country leader pop ship species">
				<annotation>checks if the scoped object is of the same species as another object</annotation>
			</simple>
			<simple entity="is_same_species_class" type="{?}" scope="army country leader pop ship species">
				<annotation>Checks if the country/pop is of the same species class as another country/pop</annotation>
			</simple>
			<simple entity="is_same_value" type="{scope}">
				<annotation>Checks if the current scope and the target scope are the same thing</annotation>
			</simple>
			<simple entity="is_sapient" type="{bool}" scope="pop species">
				<annotation>Checks if the pop is sapient</annotation>
			</simple>
			<simple entity="is_scope_set" type="{?}" scope="country fleet planet pop ship">
				<annotation>Checks if the scope is set for appropriate target</annotation>
			</simple>
			<simple entity="is_scope_type" type="{scope}">
				<annotation>Checks currently in the specified scope</annotation>
				<!-- fleet valid tokens are: none, megastructure, planet, country, ship, pop, fleet, galactic_object, leader, army, ambient_object, species, design,pop_faction, war, alliance, starbase,deposit,observer, sector -->
			</simple>
			<simple entity="is_scope_valid" type="{bool}">
				<annotation>Checks if the current scope is valid</annotation>
			</simple>
			<simple entity="is_sector_capital" type="{bool}" scope="planet">
				<annotation>Checks if the planet is it's sector's capital</annotation>
			</simple>
			<simple entity="is_ship" type="{ship}" scope="ship">
				<annotation>Checks if the ship is the same as target ship</annotation>
			</simple>
			<simple entity="is_ship_class" type="{ship-class}" scope="design fleet ship">
				<annotation>Checks if the design/fleet/ship is a specific class</annotation>
			</simple>
			<simple entity="is_ship_size" type="{ship-size}" scope="design fleet ship">
				<annotation>Checks if the design/fleet/ship is a specific ship size</annotation>
			</simple>
			<simple entity="is_site_at_stage" relation="bool" type="{int}" scope="archaeological_site">
				<annotation>Compares the current stage index</annotation>
			</simple>
			<simple entity="is_site_completed" type="{bool}" scope="archaeological_site first_contact">
				<annotation>Checks if the site has been completed</annotation>
			</simple>
			<simple entity="is_site_current_stage_score" relation="bool" type="{int}" scope="archaeological_site first_contact">
				<annotation>Compares the current stage discovery score</annotation>
			</simple>
			<simple entity="is_site_current_stage_score_no_die" relation="bool" type="{int}" scope="archaeological_site first_contact">
				<annotation>Compares the current stage discovery score excluding the current die roll</annotation>
			</simple>
			<simple entity="is_site_days_to_next_die_roll" relation="bool" type="{int}" scope="archaeological_site first_contact">
				<annotation>Compares days to next die roll</annotation>
			</simple>
			<simple entity="is_site_last_die_result" relation="bool" type="{int}" scope="archaeological_site first_contact">
				<annotation>Compares the last dice roll</annotation>
			</simple>
			<simple entity="is_site_last_excavator" type="{country}" scope="archaeological_site">
				<annotation>Checks last excavating country</annotation>
			</simple>
			<simple entity="is_site_type" type="{?}" scope="archaeological_site">
				<annotation>Checks the type of the site</annotation>
				<!-- archaeological site type key -->
			</simple>
			<simple entity="is_site_under_excavation" type="{bool}" scope="archaeological_site">
				<annotation>Checks if the site is currently being excavated</annotation>
			</simple>
			<simple entity="is_situation_type" type="{?}" scope="situation">
				<annotation>Checks if the scoped situation is a certain type</annotation>
			</simple>
			<simple entity="is_species" type="{species-class}" scope="country leader pop species">
				<annotation>Checks if the pop/country's founder species is of a specific pre-defined species</annotation>
			</simple>
			<simple entity="is_species_class" type="{species-class}" scope="country dlc_recommendation pop species">
				<annotation>Checks if the pop/country's founder species is a specific species class</annotation>
			</simple>
			<simple entity="is_spynetwork_level" relation="bool" type="{int}" scope="spy_network">
				<annotation>Compares spy network level of the scoped object</annotation>
			</simple>
			<simple entity="is_spynetwork_max_level" relation="bool" type="{int}" scope="spy_network">
				<annotation>Compares spy network max level of the scoped object</annotation>
			</simple>
			<simple entity="is_star" type="{bool}" scope="planet">
				<annotation>Checks if the planet is a star</annotation>
			</simple>
			<simple entity="is_star_class" type="{star}" scope="galactic_object planet">
				<annotation>Checks if the system/planet(star) is of a certain class</annotation>
			</simple>
			<simple entity="is_starbase_building_building" type="{starbase-building}" scope="starbase">
				<annotation>Checks if the starbase is currently building a specific building</annotation>
			</simple>
			<simple entity="is_starbase_building_module" type="{starbase-module}" scope="starbase">
				<annotation>Checks if the starbase is currently building a specific module</annotation>
			</simple>
			<simple entity="is_starbase_type" type="{starbase-type}" scope="starbase">
				<annotation>Checks if scoped starbase would evaluate to be a certain starbase_type for it's current owner. Warning: expensive trigger</annotation>
			</simple>
			<simple entity="is_subject" type="{bool}" scope="country">
				<annotation>Checks if the country is a subject of any other country</annotation>
			</simple>
			<simple entity="is_subject_type" type="{?}" scope="country">
				<annotation>Checks if the country is a specific type of subject</annotation>
			</simple>
			<simple entity="is_subspecies" type="{species-class}" scope="country leader pop species">
				<annotation>Checks if the country/species/pop is a subspecies of the target species</annotation>
			</simple>
			<complex entity="is_surveyed" scope="galactic_object planet">
				<annotation>Checks if the system/planet has been survey by target country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="status" type="{bool}" min="1" />
				<!-- force 'yes'? -->
			</complex>

			<simple entity="is_terraformed" type="{bool}" scope="planet">
				<annotation>Checks if the planet has ever been terraformed</annotation>
			</simple>
			<simple entity="is_terraforming" type="{bool}" scope="planet">
				<annotation>Checks if the planet is currently being terraformed</annotation>
			</simple>
			<simple entity="is_threatened_to" type="{country}" scope="country">
				<annotation>Checks if the country has a threatened attitude towards target country</annotation>
			</simple>
			<simple entity="is_total_war" type="{bool}" scope="war">
				<annotation>Checks if a war is a total war</annotation>
			</simple>
			<simple entity="is_tutorial_level" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's tutorial level</annotation>
				<restriction>
					<enum value="0">
						<annotation>Off</annotation>
					</enum>
					<enum value="1">
						<annotation>Limited</annotation>
					</enum>
					<enum value="2">
						<annotation>Full</annotation>
					</enum>
				</restriction>
			</simple>

			<simple entity="is_under_colonization" type="{bool}" scope="planet">
				<annotation>Checks if the planet is being colonized</annotation>
			</simple>
			<simple entity="is_unemployed" type="{bool}" scope="pop">
				<annotation>Checks if the pop is unemployed</annotation>
			</simple>
			<simple entity="is_unfriendly_to" type="{country}" scope="country">
				<annotation>Checks if the country has an unfriendly attitude towards target country</annotation>
			</simple>
			<simple entity="is_upgrading" type="{bool}" scope="fleet megastructure">
				<annotation>Checks if the scope's fleet or megastructure is currently upgrading</annotation>
			</simple>

			<simple entity="is_valid" type="{bool}" scope="army country planet">
				<annotation>Checks to see if target scope is valid for the country/planet/army</annotation>
			</simple>
			<simple entity="is_variable_set" type="{?}" scope="ambient_object archaeological_site army country deposit espionage_asset espionage_operation federation first_contact fleet galactic_object leader megastructure planet pop pop_faction sector ship situation species spy_network starbase war">
				<annotation>Checks if the specified variable is set on the current scope. Use to avoid unset variables errors</annotation>
			</simple>
			<simple entity="is_voting_on_resolution" type="{?}">
				<!-- resolution/any -->
				<annotation>Checks if the Galactic Community is currently voting on any, or a specific resolution</annotation>
				<extension>
					<enum value="any" />
				</extension>
			</simple>

			<simple entity="is_war_leader" type="{bool}" scope="country pop_faction">
				<annotation>Checks if the country leads in a war</annotation>
			</simple>
			<complex entity="is_war_participant" scope="country war">
				<annotation>Checks if target country is participating in the war on the specified side</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="side" type="{?}" min="1" />
				<!--is_war_participant = { who = <target>/war = <target> side = attackers/defenders/<target> }-->
			</complex>
			<simple entity="is_within_borders_of" type="{country}" scope="fleet galactic_object planet ship">
				<annotation>Checks if the system/planet/fleet/ship is within the borders of the target country</annotation>
			</simple>

			<simple entity="is_years_since_community_formation" relation="bool" type="{int}">
				<annotation>
        	Compare with number of years since the formation of the Galactic Community.
        	Note: A negative value means it hasn't been formed yet!
        </annotation>
			</simple>
			<simple entity="is_years_since_council_establishment" relation="bool" type="{int}">
				<annotation>
        	Compares with number of years since the establishment of the Galactic Council.
        	Note: A negative value means it hasn't been established yet!
        </annotation>
			</simple>




			<simple entity="last_activated_relic" type="{relic}" scope="country">
				<annotation>Checks if the specified relic was the last activated one</annotation>
			</simple>
			<simple entity="last_building_changed" type="{building}" scope="planet">
				<annotation>Checks if the last building queued/unqueued/built/demolished/upgraded was the specified building</annotation>
			</simple>
			<simple entity="last_changed_policy" type="{policy}" scope="country">
				<annotation>Checks if the last policy changed by the country was a specific policy</annotation>
			</simple>
			<simple entity="last_changed_species_rights_type" type="{?}" scope="leader pop">
				<annotation>Checks if the last species rights type changed for the pop or leader is of type type</annotation>
				<!-- living_standard/citizenship/military_service/slavery/purge/colonization_control/population_control/migration_control/none (prefix for type) -->
			</simple>
			<simple entity="last_district_changed" type="{district}" scope="planet">
				<annotation>Checks if the last district queued/unqueued/built/demolished/upgraded was the specified district</annotation>
			</simple>
			<simple entity="last_increased_tech" type="{technology}" scope="country">
				<annotation>Checks if the country's last researched technology was a specific tech</annotation>
			</simple>

			<simple entity="leader_age" relation="bool" type="{int}" scope="leader">
				<annotation>Checks the scope leader's age</annotation>
			</simple>
			<simple entity="leader_class" type="{leader}" scope="leader">
				<annotation>Checks if the leader is of a specific class</annotation>
			</simple>
			<simple entity="leader_of_faction" type="{pop-faction}" scope="leader">
				<annotation>Checks if the leader is the leader of a faction</annotation>
				<extension>
					<enum value="yes" />
					<enum value="no" />
				</extension>
			</simple>

			<simple entity="local_has_dlc" type="{string}">
				<annotation>Checks if the local player has a specific DLC enabled</annotation>
			</simple>
			<simple entity="local_human_species_class" type="{species-class}">
				<annotation>Checks if local humans founder species is a specific species class</annotation>
			</simple>

			<simple entity="log" type="{string}">
				<annotation>Prints a message to game.log for debugging purposes</annotation>
			</simple>
			<simple entity="logged_in_to_pdx_account" type="{bool}">
				<annotation>Checks if the local human is logged in to a Pdx account. This WILL cause an out of sync if used for anything that can change the game state</annotation>
			</simple>




			<complex entity="market_resource_price" scope="country">
				<annotation>Checks market price of a specific resource for the current country</annotation>

				<simple entity="resource" type="{resource}" />
				<simple entity="amount" type="{int}" />
				<simple entity="trade_type" type="{string}" />
				<!-- market_buy/market_sell/not_set (i.e. price without market fees) -->
				<simple entity="value" relation="bool" type="{float}" />
			</complex>
			<simple entity="max_naval_capacity" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's max naval capacity in absolute numbers</annotation>
			</simple>
			<simple entity="member_of_faction" type="{pop-faction}" scope="pop">
				<annotation>Checks if the pop belongs to any, or a specific faction</annotation>
				<extension>
					<enum value="yes" />
					<enum value="no" />
				</extension>
			</simple>
			<simple entity="mid_game_years_passed" relation="bool" type="{int}">
				<annotation>Checks the number of in-game years passed since the mid-game start date</annotation>
			</simple>
			<simple entity="mission_progress" relation="bool" type="{float}" scope="fleet">
				<annotation>Checks if the observation post has achieved specific progress in a mission</annotation>
			</simple>




			<simple entity="name_list_category" type="{?}" scope="dlc_recommendation">
				<annotation>Checks if a specific name list is used for the a species during empire creation</annotation>
			</simple>

			<simple entity="num_active_gateways" relation="bool" type="{int}">
				<annotation>Checks the number of active gateways in the galaxy</annotation>
			</simple>
			<simple entity="num_ai_empires_setting" relation="bool" type="{int}">
				<annotation>Checks the number of AI empires defined in setup</annotation>
			</simple>
			<simple entity="num_armies" relation="bool" type="{int}" scope="country planet">
				<annotation>Checks the country's or planet's number of armies</annotation>
			</simple>
			<simple entity="num_artificial_pops_per_year" relation="bool" type="{float}" scope="planet">
				<annotation>Checks how many artificial pops the planet expects to assemble in a year on average at the current rate</annotation>
			</simple>
			<simple entity="num_ascension_perk_slots" relation="bool" type="{int}" scope="country">
				<annotation>Compares the number of unlocked ascension perk slots of the scope with the given value</annotation>
			</simple>
			<simple entity="num_ascension_perks" relation="bool" type="{int}" scope="country">
				<annotation>Compares the number of AP points the country has spent with the given value</annotation>
			</simple>
			<complex entity="num_assigned_jobs" scope="country planet">
				<annotation>Checks the number of pops the planet or country has that work a specific job</annotation>

				<simple entity="job" type="{pop-job}" />
				<!-- unemployed -->
				<simple entity="value" relation="bool" type="{int}" />
			</complex>
			<simple entity="num_associates" relation="bool" type="{int}" scope="federation">
				<annotation>Checks number of associates in scoped federation</annotation>
			</simple>

			<complex entity="num_buildings" scope="country planet">
				<annotation>Checks the number the planet has of any, or a specific building</annotation>

				<simple entity="type" type="{building}" min="1" />
				<!-- any -->
				<simple entity="value" relation="bool" type="{int}" min="1" />
				<simple entity="disabled" relation="bool" type="{int}" />
				<!-- any(default)/yes(only)/no(only) -->
				<simple entity="in_construction" relation="bool" type="{int}" />
				<!-- <any/no(default)/yes(only)> -->
			</complex>

			<simple entity="num_closed_borders" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of countries the country has closed borders to</annotation>
			</simple>
			<simple entity="num_commercial_pacts" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of commercial pacts the current country has</annotation>
			</simple>
			<simple entity="num_communications" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of established communications</annotation>
			</simple>
			<simple entity="num_council_positions" relation="bool" type="{int}">
				<annotation>Compares the number of council positions in the Galactic Community</annotation>
			</simple>

			<simple entity="num_defensive_pacts" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of defensive pacts the current country has</annotation>
			</simple>
			<complex entity="num_districts" scope="planet">
				<annotation>Checks the number the planet has of any, or a specific district</annotation>

				<simple entity="type" type="{building}" min="1" />
				<!-- any -->
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>

			<simple entity="num_empires" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of regular empires in the galaxy</annotation>
			</simple>
			<simple entity="num_energy" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's total amount of energy</annotation>
			</simple>
			<simple entity="num_engineering" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's total amount of engineering research</annotation>
			</simple>
			<simple entity="num_envoys_to_federation" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of envoys sent to it's federation</annotation>
			</simple>
			<simple entity="num_envoys_to_galcom" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of envoys sent to the galactic community</annotation>
			</simple>
			<simple entity="num_espionage_assets" type="{int}" scope="espionage_operation spy_network">
				<annotation>Compares the number of assets associated with the scope object</annotation>
			</simple>
			<simple entity="num_ethics" type="{int}" scope="country pop">
				<annotation>Checks the country/pop's number of ethics</annotation>
			</simple>

			<simple entity="num_fallen_empires" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of fallen empires in the galaxy</annotation>
			</simple>
			<simple entity="num_fallen_empires_setting" relation="bool" type="{int}">
				<annotation>Checks the number of fallen empires defined in setup</annotation>
			</simple>
			<complex entity="num_favors" scope="country">
				<annotation>Checks amount of favors that scoped country can collect from target country</annotation>

				<simple entity="target" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>
			<simple entity="num_fleets" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of fleets</annotation>
			</simple>
			<complex entity="num_free_districts" scope="planet">
				<annotation>Checks the number of available slots the planet has of any, or a specific district</annotation>

				<simple entity="type" type="{district}" min="1" />
				<!-- any -->
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>

			<simple entity="num_galaxy_systems" relation="bool" type="{int}">
				<annotation>Checks number of star systems in the galaxy</annotation>
			</simple>
			<simple entity="num_guaranteed_colonies" relation="bool" type="{int}">
				<annotation>Checks the number of guaranteed colonies defined in setup</annotation>
			</simple>
			<simple entity="num_guarantees" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of empires the current country is guaranteeing</annotation>
			</simple>

			<simple entity="num_housing" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's total housing</annotation>
			</simple>

			<complex entity="num_killed_ships" scope="country">
				<annotation>Checks how many of target country's ships that the country has destroyed</annotation>

				<simple entity="type" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>

			<simple entity="num_marauder_empires_to_spawn" relation="bool" type="{int}">
				<annotation>Checks the number of marauder empires specified by the galaxy setup</annotation>
			</simple>
			<simple entity="num_members" relation="bool" type="{int}" scope="federation">
				<annotation>Checks number of members in scoped federation</annotation>
			</simple>
			<simple entity="num_migration_pacts" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of migration pacts a country has</annotation>
			</simple>
			<simple entity="num_minerals" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's total amount of minerals</annotation>
			</simple>
			<simple entity="num_modifiers" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's number of modifiers</annotation>
			</simple>
			<simple entity="num_moons" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's number of moons</annotation>
			</simple>

			<simple entity="num_non_aggression_pacts" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of non-aggression pacts the current country has</annotation>
			</simple>

			<simple entity="num_organic_pops_per_year" relation="bool" type="{float}" scope="planet">
				<annotation>Checks how many organic pops the planet expects to gain in a year on average (through growth and assembly) at the current rate</annotation>
			</simple>
			<simple entity="num_owned_active_gateways" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of active gateways owned by the scoped country</annotation>
			</simple>
			<simple entity="num_owned_leaders" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of owned (recruited) non-envoy leaders (includes the ruler)</annotation>
			</simple>
			<simple entity="num_owned_planets" relation="bool" type="{int}" scope="country sector">
				<annotation>Checks the country's or sector's number of owned planets</annotation>
			</simple>
			<simple entity="num_owned_relics" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of relics owned by the scoped country</annotation>
			</simple>

			<simple entity="num_physics" type="{int}" scope="planet">
				<annotation>Checks the planet's total amount of physics research</annotation>
			</simple>
			<simple entity="num_planets_in_system" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the solar system's total number of planets</annotation>
			</simple>
			<simple entity="num_pops" relation="bool" type="{int}" scope="country planet pop_faction sector">
				<annotation>Checks the number of pops on the planet/country/pop faction/sector</annotation>
			</simple>
			<simple entity="num_rare_techs" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of researched rare technologies</annotation>
			</simple>
			<simple entity="num_repeatable_techs" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of researched repeatable technologies</annotation>
			</simple>
			<simple entity="num_research_agreements" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of research agreements a country has</annotation>
			</simple>
			<simple entity="num_researched_techs" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of researched technologies</annotation>
			</simple>
			<simple entity="num_rivals" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of rivalries a country has</annotation>
			</simple>

			<simple entity="num_sapient_pops" relation="bool" type="{int}" scope="country planet">
				<annotation>Checks the number of sapient pops on the country/planet</annotation>
			</simple>
			<simple entity="num_sectors" relation="bool" type="{int}" scope="country">
				<annotation>Counts the number of sectors owned by the scoped country</annotation>
			</simple>
			<simple entity="num_ships" relation="bool" type="{int}" scope="country fleet">
				<annotation>Checks the country/fleet's number of ships</annotation>
			</simple>
			<simple entity="num_society" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's total amount of society research</annotation>
			</simple>
			<simple entity="num_species" relation="bool" type="{int}" scope="country planet pop_faction">
				<annotation>
        	Checks if the number of species on a planet, in an empire or in a pop faction is according to the argument.
        	Does not count genetically modified species as unique
        </annotation>
			</simple>
			<simple entity="num_starbases" relation="bool" type="{int}" scope="country">
				<annotation>Counts the number of starbases owned by the scoped country</annotation>
			</simple>
			<simple entity="num_support_independence" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of empires the current country is supporting the independence of</annotation>
			</simple>

			<complex entity="num_taken_planets" scope="country">
				<annotation>Checks how many planets the country has taken from target country</annotation>

				<simple entity="type" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>
			<simple entity="num_trade_routes" relation="bool" type="{int}" scope="country">
				<annotation>Counts the number trade routes in the empire</annotation>
			</simple>
			<simple entity="num_tradition_categories" relation="bool" type="{int}" scope="country">
				<annotation>Checks number of tradition categories the country has picked</annotation>
			</simple>
			<simple entity="num_trait_points" relation="bool" type="{int}" scope="country leader pop species">
				<annotation>Checks the country/species/pop/leader's number of traits points spent</annotation>
			</simple>
			<simple entity="num_traits" relation="bool" type="{int}" scope="country leader pop species">
				<annotation>Checks the country/species/pop/leader's number of traits</annotation>
			</simple>
			<simple entity="num_truces" relation="bool" type="{int}" scope="country">
				<annotation>Checks the number of truces country has</annotation>
			</simple>

			<simple entity="num_uncleared_blockers" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's total amount of uncleared blockers</annotation>
			</simple>
			<simple entity="num_unemployed" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the number of unemployed pops on the planet</annotation>
			</simple>
			<simple entity="num_unique_species" relation="bool" type="{int}" scope="country planet pop_faction">
				<annotation>
        	Checks if the number of species on a planet, in an empire or in a pop faction is according to the argument.
        	Counts genetically modified species as unique
        </annotation>
			</simple>




			<simple entity="off_war_exhaustion_sum" relation="bool" type="{float}" scope="country">
				<annotation>Checks the country's total war exhaustion for all offensive wars</annotation>
			</simple>
			<complex entity="opinion" scope="country">
				<annotation>Checks the country's opinion of the target country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>
			<complex entity="opinion_level" scope="country">
				<annotation>Checks the country's opinion level of the target country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="level" relation="bool" type="{?}" min="1" />
				<!-- level >= neutral -->
			</complex>
			<complex entity="opposing_ethics_divergence" scope="country pop">
				<annotation>Checks how far removed the country/pop's ethos is from target's</annotation>

				<simple entity="who" type="{?}" min="1" />
				<simple entity="steps" relation="bool" type="{int}" min="1" />
			</complex>
			<simple entity="original_owner" type="{bool}" scope="planet">
				<annotation>Checks if the planet is still owned by it's first colonizer</annotation>
			</simple>
			<simple entity="owns_any_bypass" type="{bypass}" scope="country">
				<annotation>Checks if the scoped country controls any system containing a bypass of a specific type</annotation>
			</simple>




			<simple entity="perc_communications_with_playable" relation="bool" type="{float}" scope="country">
				<annotation>Checks the country's percentage of communications with playable empires</annotation>
			</simple>

			<simple entity="planet_crime" relation="bool" type="{int}" scope="planet">
				<annotation>Compares the crime present on the planet with the given value</annotation>
			</simple>
			<simple entity="planet_devastation" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's devastation</annotation>
			</simple>
			<complex entity="planet_resource_compare" scope="planet">
				<annotation>Checks specific resource value for scoped planet. Warning: performance-intensive trigger!</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
				<simple entity="type" type="{?}" />
				<!-- upkeep/produces/balance(default) -->
			</complex>
			<simple entity="planet_size" relation="bool" type="{int}" scope="planet">
				<annotation>Checks the planet's size</annotation>
			</simple>
			<simple entity="planet_stability" relation="bool" type="{int}" scope="planet">
				<annotation>Compares the stability present on the planet with the given value</annotation>
			</simple>

			<simple entity="pop_has_ethic" type="{ethic}" scope="pop">
				<annotation>Checks if the pop has a specific ethos</annotation>
			</simple>
			<simple entity="pop_has_happiness" type="{bool}" scope="pop">
				<annotation>Checks if the current pop has happiness or not</annotation>
			</simple>
			<simple entity="pop_has_trait" type="{trait}" scope="pop">
				<annotation>Checks if the pop has a specific trait</annotation>
			</simple>
			<complex entity="pop_maintenance_cost" scope="pop">
				<annotation>Checks the maintenace costs of a pop</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>
			<complex entity="pop_percentage" scope="country planet pop_faction sector">
				<annotation>Checks the percentage of pops in the scope that fulfill the specified criteria</annotation>

				<simple entity="percentage" relation="bool" type="{float}" min="1" />
				<complex entity="limit" type="{trigger}" min="1" />
				<complex entity="exclude" type="{trigger}" />
			</complex>
			<complex entity="pop_produces_resource" scope="pop">
				<annotation>Checks if a pop is currently producing a particular resource</annotation>

				<simple entity="type" type="{resource}" min="1" />
				<simple entity="amount" relation="bool" type="{float}" min="1" />
			</complex>

			<simple entity="pre_ruler_leader_class" type="{leader}" scope="leader">
				<annotation>Checks the rulers previous leader class</annotation>
			</simple>




			<simple entity="recently_lost_war" type="{bool}" scope="country">
				<annotation>Checks if the country recently lost a war ('recently' meaning recent enough to have a truce)</annotation>
			</simple>
			<complex entity="relative_encryption_decryption" scope="country espionage_operation spy_network">
				<annotation>Divides the encryption value of the scope object with the decryption value of the target and compares with value</annotation>

				<simple entity="target" type="{country}" />
				<!-- Target is only used for country scope -->
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>
			<complex entity="relative_power" scope="country federation">
				<annotation>Compares relative power between two countries</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="category" type="{?}" min="1" />
				<!-- fleet/economy/technology/all -->
				<simple entity="value" type="{?}" min="1" />
				<!-- pathetic/inferior/equivalent/superior/overwhelming -->
			</complex>
			<complex entity="research_leader" scope="country">
				<annotation>Checks if the country's researcher in a specific field meets the specified criteria</annotation>

				<simple entity="area" type="{?}" min="1" />
				<!-- engineering -->
				<complex sequence="only" type="{trigger}" />
			</complex>

			<complex entity="resource_expenses_compare" scope="country">
				<annotation>Checks specific resource expenses value for the country scope</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>
			<complex entity="resource_income_compare" scope="country">
				<annotation>Checks specific resource income value for the country scope. Note: checks profit/loss, not revenue</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>
			<complex entity="resource_revenue_compare" scope="country">
				<annotation>Checks specific resource revenue value for the country scope</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
			</complex>
			<complex entity="resource_stockpile_compare" scope="country">
				<annotation>Checks specific resource stockpile for the country scope</annotation>

				<simple entity="resource" type="{resource}" min="1" />
				<simple entity="value" relation="bool" type="{float}" min="1" />
				<simple entity="mult" relation="bool" type="{float}">
					<annotation>Multiply the value by a variable, e.g. for when you are doing the same with 'add_resource'</annotation>
				</simple>
			</complex>

			<complex entity="reverse_has_relation_flag" scope="country">
				<annotation>Checks if the target country has a relation flag towards the country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="flag" type="{flag}" min="1" />
			</complex>
			<simple entity="running_balance" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's running energy credit balance</annotation>
			</simple>




			<simple entity="scientist_count" relation="bool" type="{int}" scope="country">
				<annotation>Checks the countrys' number of scientists</annotation>
			</simple>

			<simple entity="situation_monthly_progress" relation="bool" type="{int}" scope="situation">
				<annotation>Checks if the scoped situation's monthly progress is a certain value</annotation>
			</simple>
			<simple entity="situation_progress" relation="bool" type="{int}" scope="situation">
				<annotation>Checks if the scoped situation's progress is a certain value</annotation>
			</simple>

			<simple entity="species_gender" type="{string}" scope="species">
				<annotation>Checks what gender settings the species allows</annotation>
				<restriction>
					<!-- такой же в gender -->
					<enum value="not_set" />
					<!-- what is it -->
					<enum value="male" />
					<enum value="female" />
					<enum value="indeterminable" />
				</restriction>
			</simple>
			<simple entity="species_has_happiness_with_owner" type="{country}" scope="species">
				<annotation>Checks if the current species has happiness or not when owned by a specified country</annotation>
			</simple>
			<simple entity="species_planet_slave_percentage" relation="bool" type="{float}" min-value="0" max-value="1" scope="pop">
				<annotation>Checks if a pop's planet has a specific percentage (0.00-1.00) of the same species enslaved</annotation>
			</simple>
			<simple entity="species_portrait" type="{?}" scope="country pop species">
				<annotation>Checks if the species (or pop/empire's dominant species) uses a certain portrait</annotation>
			</simple>

			<complex entity="starbase_buildable_is_in_queue_before" scope="starbase">
				<annotation>
        	Checks if the first buildable is in the starbase building queue before the second buildable (for prerequisites, mostly).
        	Returns false if the first one, or both aren't in the queue.
        	Returns true if the first one is in, but the second isn't
        </annotation>

				<simple entity="first" type="{?}" min="1" />
				<simple entity="second" type="{?}" min="1" />
			</complex>
			<simple entity="starting_system" type="{bool}" scope="galactic_object">
				<annotation>Checks if the system is the starting system for any country</annotation>
			</simple>

			<simple entity="stored_engineering_points" relation="bool" type="{float}" scope="country">
				<annotation>Checks the country's amount of stored engineering research</annotation>
			</simple>
			<simple entity="stored_physics_points" relation="bool" type="{float}" scope="country">
				<annotation>Checks the country's amount of stored physics research</annotation>
			</simple>
			<simple entity="stored_society_points" relation="bool" type="{float}" scope="country">
				<annotation>Checks the country's amount of stored society research</annotation>
			</simple>

			<simple entity="subject_can_diplomacy" type="{?}" scope="country">
				<annotation>Checks if the current country is allowed by it's overlord to take diplomatic action</annotation>
			</simple>
			<complex entity="success_text">
				<annotation>Shows custom text when the associated trigger passes</annotation>

				<simple entity="text" type="{string}" min="1" />
				<complex sequence="only" type="{trigger}" />
			</complex>
			<simple entity="support" relation="bool" type="{float}" scope="pop_faction">
				<annotation>Checks the faction's support level</annotation>
			</simple>




			<complex entity="tech_unlocked_ratio" scope="country">
				<annotation>Checks the relative amount of already-researched tech between the country and target country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="ratio" relation="bool" type="{float}" min="1" />
			</complex>
			<simple entity="terraformed_by" type="{country}" scope="planet">
				<annotation>Checks if planet is terraformed by country</annotation>
			</simple>
			<simple entity="text" type="{string}">
				<annotation>Shows custom text</annotation>
			</simple>
			<complex entity="their_opinion" scope="country">
				<annotation>Checks target country's opinion value of the current country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>

			<simple entity="trade_income" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's energy credits income from trade for the previous month</annotation>
			</simple>
			<simple entity="trade_intercepted_percentage" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the intercepted trade value ratio going through the system</annotation>
			</simple>
			<simple entity="trade_intercepted_value" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the intercepted trade value going through the system</annotation>
			</simple>
			<simple entity="trade_protected_percentage" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the protected trade value ratio going through the system</annotation>
			</simple>
			<simple entity="trade_protected_value" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the protected trade value going through the system</annotation>
			</simple>
			<simple entity="trade_route_value" relation="bool" type="{int}" scope="galactic_object">
				<annotation>Checks the trade value going through the system</annotation>
			</simple>
			<complex entity="trust" scope="country">
				<annotation>Checks the country's trust of the target country</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>




			<simple entity="upgrade_days_left" relation="bool" type="{int}" scope="megastructure">
				<annotation>Checks how many days an upgrading megastructure will take to complete it's upgrade</annotation>
			</simple>
			<simple entity="used_naval_capacity_integer" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's used naval capacity in absolute numbers</annotation>
			</simple>
			<simple entity="used_naval_capacity_percent" relation="bool" type="{float}" min-value="0" max-value="1" scope="country">
				<annotation>Checks the country's used naval capacity in relative terms (0.00-1.00)</annotation>
			</simple>
			<simple entity="uses_district_set" type="{?}" scope="planet">
				<annotation>Checks if the planet has the specified tag for district usage</annotation>
			</simple>
			<complex entity="using_war_goal" scope="war">
				<annotation>Checks if a war has a specific war goal</annotation>

				<simple entity="type" type="{?}" min="1" />
				<simple entity="owner" type="{country}" min="1" />
			</complex>




			<simple entity="valid_planet_killer_target" type="{planet}" scope="fleet">
				<annotation>Checks if the scoped fleet can target the given planet with it's planet killer weapon</annotation>
			</simple>
			<simple entity="vassals" relation="bool" type="{int}" scope="country">
				<annotation>Checks the country's number of vassals</annotation>
			</simple>




			<complex entity="war_begun_num_fleets_gone_mia" scope="war">
				<annotation>Checks amount of target country's fleets that went MIA when the war began</annotation>

				<simple entity="who" type="{country}" min="1" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>
			<simple entity="won_the_game" type="{bool}" scope="country">
				<annotation>Checks if scoped country won the game</annotation>
			</simple>
			<complex entity="would_join_war" scope="country">
				<annotation>Checks if the country would join the side of target country in a hypothetical war</annotation>

				<simple entity="attacker" type="{country}" />
				<simple entity="defender" type="{country}" />
				<simple entity="side" type="{country}" min="1" />
			</complex>




			<simple entity="xeno_compatibility_enabled" type="{bool}">
				<annotation>Checks if Xeno Compatibility are enabled in game setup</annotation>
			</simple>




			<complex entity="years_of_peace" scope="country">
				<annotation>Checks the number of in-game years country has been at peace, with optional parameter to delay from start of game</annotation>

				<simple entity="delay" type="{int}" />
				<simple entity="value" relation="bool" type="{int}" min="1" />
			</complex>
			<simple entity="years_passed" relation="bool" type="{int}">
				<annotation>Checks the number of in-game years passed since the 2200 start</annotation>
			</simple>
		</choice>
	</reference>
</references>